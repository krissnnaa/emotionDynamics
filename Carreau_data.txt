Created Date				Comments
2019-03-19T20:10:15Z			so i get an infinite recursion somewhere here im going to attempt a refactor with a 2 step search and update  
2019-03-19T20:10:15Z			so i get an infinite recursion somewhere here im going to attempt a refactor with a 2 step search and update  
2019-02-11T03:39:35Z			i believe you ned to use the iptest entry point that will call iptestcontrollerpy otherwise some setup might not be done correctly on all systems i have to check thoughwhat the exact difference is 
2019-02-11T03:39:35Z			i believe you ned to use the iptest entry point that will call iptestcontrollerpy otherwise some setup might not be done correctly on all systems i have to check thoughwhat the exact difference is 
2019-02-18T19:56:10Z			thanks for the review i added this to every relevant point  
2019-02-18T19:56:49Z			this was apparently testing we properly handle a bug in tokenizer that was fixed in 38 so the test is not relevant anymore  
2019-02-18T19:56:10Z			thanks for the review i added this to every relevant point  
2019-02-18T19:56:49Z			this was apparently testing we properly handle a bug in tokenizer that was fixed in 38 so the test is not relevant anymore  
2019-02-18T22:36:43Z			you used char here instead of chr i fixed it 
2019-02-18T22:40:20Z			those 3 things are not quite correct python have functions and methods as first class values so you can do diff for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches selffwd_unicode_matchand it will work better  
2019-02-18T22:48:59Z			there is one more issue if we run the test here we can see that if x for x in names if xstartswiths is empty then we should not return s but an empty string this might be a bug somewhere else in ipython but it breaks the test suite i can fix it like so  diff completerpy2076  def fwd_unicode_matchself textstr  tuplestr list          if text starts with slash         if slashpos  1             s  textslashpos1            return s x for x in names if xstartswiths            candidates  x for x in names if xstartswiths            if candidates                return s x for x in names if xstartswiths            else                return            if text does not start with slash         else            return u             return u  
2019-02-18T22:36:43Z			you used char here instead of chr i fixed it 
2019-02-18T22:40:20Z			those 3 things are not quite correct python have functions and methods as first class values so you can do diff for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches selffwd_unicode_matchand it will work better  
2019-02-18T22:48:59Z			there is one more issue if we run the test here we can see that if x for x in names if xstartswiths is empty then we should not return s but an empty string this might be a bug somewhere else in ipython but it breaks the test suite i can fix it like so  diff completerpy2076  def fwd_unicode_matchself textstr  tuplestr list          if text starts with slash         if slashpos  1             s  textslashpos1            return s x for x in names if xstartswiths            candidates  x for x in names if xstartswiths            if candidates                return s x for x in names if xstartswiths            else                return            if text does not start with slash         else            return u             return u  
2019-01-06T17:51:23Z			tip endswith support multiple values so you could do full_filenameendswithipy ipynb py 
2019-01-06T17:51:23Z			tip endswith support multiple values so you could do full_filenameendswithipy ipynb py 
2019-03-19T20:10:15Z			so i get an infinite recursion somewhere here im going to attempt a refactor with a 2 step search and update  
2019-03-19T20:10:15Z			so i get an infinite recursion somewhere here im going to attempt a refactor with a 2 step search and update  
2019-02-11T03:39:35Z			i believe you ned to use the iptest entry point that will call iptestcontrollerpy otherwise some setup might not be done correctly on all systems i have to check thoughwhat the exact difference is 
2019-02-11T03:39:35Z			i believe you ned to use the iptest entry point that will call iptestcontrollerpy otherwise some setup might not be done correctly on all systems i have to check thoughwhat the exact difference is 
2019-02-18T19:56:10Z			thanks for the review i added this to every relevant point  
2019-02-18T19:56:49Z			this was apparently testing we properly handle a bug in tokenizer that was fixed in 38 so the test is not relevant anymore  
2019-02-18T19:56:10Z			thanks for the review i added this to every relevant point  
2019-02-18T19:56:49Z			this was apparently testing we properly handle a bug in tokenizer that was fixed in 38 so the test is not relevant anymore  
2019-02-18T22:36:43Z			you used char here instead of chr i fixed it 
2019-02-18T22:40:20Z			those 3 things are not quite correct python have functions and methods as first class values so you can do diff for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches selffwd_unicode_matchand it will work better  
2019-02-18T22:48:59Z			there is one more issue if we run the test here we can see that if x for x in names if xstartswiths is empty then we should not return s but an empty string this might be a bug somewhere else in ipython but it breaks the test suite i can fix it like so  diff completerpy2076  def fwd_unicode_matchself textstr  tuplestr list          if text starts with slash         if slashpos  1             s  textslashpos1            return s x for x in names if xstartswiths            candidates  x for x in names if xstartswiths            if candidates                return s x for x in names if xstartswiths            else                return            if text does not start with slash         else            return u             return u  
2019-02-18T22:36:43Z			you used char here instead of chr i fixed it 
2019-02-18T22:40:20Z			those 3 things are not quite correct python have functions and methods as first class values so you can do diff for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches for meth in selfunicode_name_matches back_latex_name_matches back_unicode_name_matches selffwd_unicode_matchand it will work better  
2019-02-18T22:48:59Z			there is one more issue if we run the test here we can see that if x for x in names if xstartswiths is empty then we should not return s but an empty string this might be a bug somewhere else in ipython but it breaks the test suite i can fix it like so  diff completerpy2076  def fwd_unicode_matchself textstr  tuplestr list          if text starts with slash         if slashpos  1             s  textslashpos1            return s x for x in names if xstartswiths            candidates  x for x in names if xstartswiths            if candidates                return s x for x in names if xstartswiths            else                return            if text does not start with slash         else            return u             return u  
2019-01-06T17:51:23Z			tip endswith support multiple values so you could do full_filenameendswithipy ipynb py 
2019-01-06T17:51:23Z			tip endswith support multiple values so you could do full_filenameendswithipy ipynb py 
2018-12-06T18:02:40Z			1 we likely want to remind user they might need to restart the kernel  
2018-12-06T18:02:40Z			1 we likely want to remind user they might need to restart the kernel  
2018-11-03T00:50:53Z			youve kept parts here which does not exist any more did you mean to replace with object_partssame bellow with file_parts instead 
2018-11-03T00:50:53Z			youve kept parts here which does not exist any more did you mean to replace with object_partssame bellow with file_parts instead 
2018-10-26T04:37:15Z			im thanks but im pretty at least some of these are correct in 1 from ipythonterminalinteractiveshell import terminalinteractiveshell interactiveshellin 2 terminalinteractiveshellhighlighting_style_overridesout2 traitletstraitletsdict at 0x105691eb8in 3 interactiveshellhighlighting_style_overridesattributeerror                            traceback most recent call lastipythoninput3e268df97a2b4 in module 1 interactiveshellhighlighting_style_overridesattributeerror type object interactiveshell has no attribute highlighting_style_overridesnote that there is __both__ terminalinteractiveshell and interactiveshell the former one used in terminal ipython the later one inherited from in ipykernel to connect to  for example  the notebook  
2018-10-26T04:37:15Z			im thanks but im pretty at least some of these are correct in 1 from ipythonterminalinteractiveshell import terminalinteractiveshell interactiveshellin 2 terminalinteractiveshellhighlighting_style_overridesout2 traitletstraitletsdict at 0x105691eb8in 3 interactiveshellhighlighting_style_overridesattributeerror                            traceback most recent call lastipythoninput3e268df97a2b4 in module 1 interactiveshellhighlighting_style_overridesattributeerror type object interactiveshell has no attribute highlighting_style_overridesnote that there is __both__ terminalinteractiveshell and interactiveshell the former one used in terminal ipython the later one inherited from in ipykernel to connect to  for example  the notebook  
2018-10-21T19:26:43Z			we should actually list things here  
2018-10-21T19:27:36Z			typo in doctestsuggestionfor more information on supress and doctest decorators please refer to the end of this file in  
2018-10-21T20:51:42Z			ill have to reread the code but my guess its doctest or savefig 
2018-10-21T20:52:13Z			sure or you can apparently accept in the github ui but its brand new so i havent used it before  
2018-10-21T20:59:10Z			i think the error is just this trailing quote  
2018-10-21T20:59:17Z			suggestion   doctest 
2018-10-21T19:26:43Z			we should actually list things here  
2018-10-21T19:27:36Z			typo in doctestsuggestionfor more information on supress and doctest decorators please refer to the end of this file in  
2018-10-21T20:51:42Z			ill have to reread the code but my guess its doctest or savefig 
2018-10-21T20:52:13Z			sure or you can apparently accept in the github ui but its brand new so i havent used it before  
2018-10-21T20:59:10Z			i think the error is just this trailing quote  
2018-10-21T20:59:17Z			suggestion   doctest 
2018-10-21T20:46:06Z			suggestion     convert if using cpython tokenize     upstream bug was fixed in python 371 so once we drop 37 this can likely be removed  
2018-10-22T14:43:10Z			if you want to keep the oder i believe you can compare list comprehensionsttype for t in tokens_by_line12  tokenizededent tokenizeendmarkerin 4 0 122  1 2out4 true 
2018-10-21T20:46:06Z			suggestion     convert if using cpython tokenize     upstream bug was fixed in python 371 so once we drop 37 this can likely be removed  
2018-10-22T14:43:10Z			if you want to keep the oder i believe you can compare list comprehensionsttype for t in tokens_by_line12  tokenizededent tokenizeendmarkerin 4 0 122  1 2out4 true 
2018-10-21T01:06:51Z			forgotten debug  suggestion 
2018-10-21T01:06:51Z			forgotten debug  suggestion 
2018-10-21T15:33:54Z			yes feel free to make any replacement you feel is better  
2018-10-21T17:37:05Z			no that is just an example on how to use savefig do what you can even partially if its annoying or confusing send what you have and feel free to move on to something more interesting 
2018-10-21T17:38:26Z			i think chris was suggesting refactoring and being clearer with headingsubheading you can see the rendered version therehttpsipythonreadthedocsioenlatestdevelopmentipython_directivehtml there is a lot of duplicate information and organisational issues  
2018-10-21T15:33:54Z			yes feel free to make any replacement you feel is better  
2018-10-21T17:37:05Z			no that is just an example on how to use savefig do what you can even partially if its annoying or confusing send what you have and feel free to move on to something more interesting 
2018-10-21T17:38:26Z			i think chris was suggesting refactoring and being clearer with headingsubheading you can see the rendered version therehttpsipythonreadthedocsioenlatestdevelopmentipython_directivehtml there is a lot of duplicate information and organisational issues  
2018-10-25T17:07:10Z			yes i understand the point i was just doing and dumb listing of the changes from a user point of view and it still lead to the ε character being untypable with the latex equivalent you can still use greek small letter epsilontab but i want to properly document it appologies if it was a confusing comment 
2018-10-25T17:07:10Z			yes i understand the point i was just doing and dumb listing of the changes from a user point of view and it still lead to the ε character being untypable with the latex equivalent you can still use greek small letter epsilontab but i want to properly document it appologies if it was a confusing comment 
2018-10-14T17:44:45Z			1 good job  
2018-10-14T17:44:45Z			1 good job  
2018-10-13T22:38:10Z			you can actually move that out of the for loop if you really want  
2018-10-13T22:43:53Z			that seem more uniform though that will conflict will already existing pr it would be better to do as separate changes ill see which pr is easier to apply first  
2018-10-13T22:45:45Z			thats typically a change thats generally considered good though this function is relatively simple and that will make any further backport or history digging around this file more difficult i dont think it is really necessary  
2018-10-13T22:46:01Z			i dont think a space is needed here  
2018-10-13T22:49:19Z			seem ok here but not strictly equivalent what if term_title is falseish  like empty string  none or empty list in a subclass  does toggle_set_term_title allow non boolean values   
2018-10-13T22:55:19Z			that seem strait forward here but actually the semantics are different and i even believe some other branches in the code are wrong in particularstyle_overrides  _style_overrides_linux and style_overrides  _style_overrides_light_bgindeed later on we do style_overridesupdateselfhighlighting_style_overrides so if you assign something to style_override instead of using update you will mutate the original _style_overrides_light_bg _style_overrides_linux and with your patch _style_overrides_windows which is surprising so yes to deport them as global variable but we need to be sure of what update vs  assing will do 
2018-10-13T22:38:10Z			you can actually move that out of the for loop if you really want  
2018-10-13T22:43:53Z			that seem more uniform though that will conflict will already existing pr it would be better to do as separate changes ill see which pr is easier to apply first  
2018-10-13T22:45:45Z			thats typically a change thats generally considered good though this function is relatively simple and that will make any further backport or history digging around this file more difficult i dont think it is really necessary  
2018-10-13T22:46:01Z			i dont think a space is needed here  
2018-10-13T22:49:19Z			seem ok here but not strictly equivalent what if term_title is falseish  like empty string  none or empty list in a subclass  does toggle_set_term_title allow non boolean values   
2018-10-13T22:55:19Z			that seem strait forward here but actually the semantics are different and i even believe some other branches in the code are wrong in particularstyle_overrides  _style_overrides_linux and style_overrides  _style_overrides_light_bgindeed later on we do style_overridesupdateselfhighlighting_style_overrides so if you assign something to style_override instead of using update you will mutate the original _style_overrides_light_bg _style_overrides_linux and with your patch _style_overrides_windows which is surprising so yes to deport them as global variable but we need to be sure of what update vs  assing will do 
2018-11-11T00:35:42Z			sure do you want to send a pr  i guess we can either let the user define a value for both or a format string 
2018-11-11T00:35:42Z			sure do you want to send a pr  i guess we can either let the user define a value for both or a format string 
2018-10-12T23:09:07Z			forgotten debug print   
2018-10-12T23:10:23Z			i guess you mean types annotations that you removed  i thing that can be trimmed now  
2018-10-12T23:09:07Z			forgotten debug print   
2018-10-12T23:10:23Z			i guess you mean types annotations that you removed  i thing that can be trimmed now  
2018-10-06T17:44:18Z			im just going to add some ok to follow where i am in the review for myself 
2018-10-06T17:44:26Z			ok 
2018-10-06T17:45:01Z			ok 
2018-10-06T17:45:07Z			ok 
2018-10-06T17:46:27Z			ok 
2018-10-06T17:47:48Z			seem good looks like we should either ends with 2 n or none 
2018-10-06T17:47:55Z			ok 
2018-10-06T17:44:18Z			im just going to add some ok to follow where i am in the review for myself 
2018-10-06T17:44:26Z			ok 
2018-10-06T17:45:01Z			ok 
2018-10-06T17:45:07Z			ok 
2018-10-06T17:46:27Z			ok 
2018-10-06T17:47:48Z			seem good looks like we should either ends with 2 n or none 
2018-10-06T17:47:55Z			ok 
2018-10-03T15:45:31Z			were py3 only  so now you can just use super 
2018-10-03T15:46:13Z			ah i would have use assert_warnshttpsdocspytestorgenlatestwarningshtmlwarns but that looks good  
2018-10-03T15:46:54Z			wondering if we should use startswith and endswith that are more efficient and likely more correct but that looks good  
2018-10-03T23:19:18Z			up to you ill reopen the linked issue add link to this section for further improvements  
2018-10-09T15:05:34Z			ah yes sorry and thishttpsdocspythonorg3libraryunittesthtmlunittesttestcaseassertwarns i just get confused between test runners  
2018-10-03T15:45:31Z			were py3 only  so now you can just use super 
2018-10-03T15:46:13Z			ah i would have use assert_warnshttpsdocspytestorgenlatestwarningshtmlwarns but that looks good  
2018-10-03T15:46:54Z			wondering if we should use startswith and endswith that are more efficient and likely more correct but that looks good  
2018-10-03T23:19:18Z			up to you ill reopen the linked issue add link to this section for further improvements  
2018-10-09T15:05:34Z			ah yes sorry and thishttpsdocspythonorg3libraryunittesthtmlunittesttestcaseassertwarns i just get confused between test runners  
2018-09-18T08:07:30Z			i know its unrelated but i was annoyed to have to fix this on my local machine with im running sphinx with warnings as errors 
2018-09-18T08:07:30Z			i know its unrelated but i was annoyed to have to fix this on my local machine with im running sphinx with warnings as errors 
2018-10-28T18:12:17Z			looks like it do you want to make a pr 
2018-10-28T18:12:17Z			looks like it do you want to make a pr 
2018-09-14T13:21:46Z			both with and without leading  works now but sure  
2018-09-14T13:21:46Z			both with and without leading  works now but sure  
2018-09-06T10:21:48Z			meh i need to replace c by d here and maybe check that this updates both c and d classes 
2018-09-06T10:27:38Z			that allows to run iptest with a filepath which is a little more confenient for bash autocompletion  
2018-09-06T10:21:48Z			meh i need to replace c by d here and maybe check that this updates both c and d classes 
2018-09-06T10:27:38Z			that allows to run iptest with a filepath which is a little more confenient for bash autocompletion  
2018-08-16T18:33:42Z			one of them is necessary if we want to have  nested embed  i can make that optional i probably added them here to have the test passing  
2018-09-04T13:30:24Z			thanks fixed 
2018-08-16T18:33:42Z			one of them is necessary if we want to have  nested embed  i can make that optional i probably added them here to have the test passing  
2018-09-04T13:30:24Z			thanks fixed 
2018-06-22T05:39:03Z			raiseerror dash instead of underscore seem more common for flags   
2018-06-22T05:39:03Z			raiseerror dash instead of underscore seem more common for flags   
2018-06-13T09:25:09Z			 isnt the right fix to reorder the inheritance so the mixin comes firstit fails in different way when swapping order  i can retry though  
2018-06-13T09:30:20Z			 i can retry thoughhum some seem to work it may have been a random failure when i tried ill recheck and do that where it works  
2018-06-13T17:18:32Z			pfff pebkac i was testing without 11174 merged and so was still seing resourcewarnings 
2018-06-13T09:25:09Z			 isnt the right fix to reorder the inheritance so the mixin comes firstit fails in different way when swapping order  i can retry though  
2018-06-13T09:30:20Z			 i can retry thoughhum some seem to work it may have been a random failure when i tried ill recheck and do that where it works  
2018-06-13T17:18:32Z			pfff pebkac i was testing without 11174 merged and so was still seing resourcewarnings 
2018-04-03T15:35:34Z			yeah good point fixed 
2018-04-03T15:35:34Z			yeah good point fixed 
2018-05-17T19:48:52Z			emit deprecation warnign at import time  
2018-05-17T19:49:53Z			generate_token is deprecatednot public maybe figure out how to use tokenize directly  or complainc to cpython to undeprecate it cause it is annoying to use  
2018-05-17T19:51:49Z			im just going to write some 1ok here and there to have a mark for myself as to what i have already reviewed 
2018-05-17T19:54:01Z			potential improvement let user pass string and compile it as strcan be done later just thinking at loud 
2018-05-17T19:57:45Z			how does that behave with unmatched parenthesis  does ti need to behave well  
2018-05-17T19:57:57Z			ok 
2018-05-17T19:58:10Z			ok 
2018-05-17T19:59:10Z			i see you are trying types annotations   
2018-05-17T20:01:25Z			hum as is out of context this one give me a headache i guess the example later will help maybe one example in the docstring i need to reread this one later 
2018-05-17T20:04:48Z			update from find the first assignment to return the index of the first  token in an assignemnt linei _guess_ the parenthesis thing allow unpacking ab  foo  
2018-05-17T20:05:35Z			hum ok will reread that one first pass is done 
2018-05-17T20:09:15Z			you _may_ be able to make that more readable by using multiple ifs and a continue the other question that come to mind about find the first magic assignment is what if there is multiple magics assignments  
2018-05-17T20:12:52Z			premature opt is the root of all evil still the following seem like it _may_ be a repetitive pattern        for line in tokens_by_line            assign_ix  _find_assign_opline            if assign_ix is not none                     and lenline  assign_ix  2 					and token checkif this is used by other external transformers maybe figure out how to extract this logic 
2018-05-17T20:15:29Z			ok 
2018-05-17T22:59:24Z			im starting to be worried of attaching priorities to class themselvesshould we register them with a priority  that seem more flexible not sure yet just gut feeling 
2018-05-17T23:04:55Z			we likely want to make sure parenlev always 0 same in other similar method not sure if it is possible though 
2018-05-17T23:07:06Z			i guess thats for debug its unused i think 
2018-05-17T23:20:10Z			sanity check it is not called more than 100 times for now  
2018-05-17T23:25:46Z			ok 
2018-05-17T23:26:37Z			emit deprecation  
2018-05-17T23:33:04Z			ok 
2018-05-17T19:48:52Z			emit deprecation warnign at import time  
2018-05-17T19:49:53Z			generate_token is deprecatednot public maybe figure out how to use tokenize directly  or complainc to cpython to undeprecate it cause it is annoying to use  
2018-05-17T19:51:49Z			im just going to write some 1ok here and there to have a mark for myself as to what i have already reviewed 
2018-05-17T19:54:01Z			potential improvement let user pass string and compile it as strcan be done later just thinking at loud 
2018-05-17T19:57:45Z			how does that behave with unmatched parenthesis  does ti need to behave well  
2018-05-17T19:57:57Z			ok 
2018-05-17T19:58:10Z			ok 
2018-05-17T19:59:10Z			i see you are trying types annotations   
2018-05-17T20:01:25Z			hum as is out of context this one give me a headache i guess the example later will help maybe one example in the docstring i need to reread this one later 
2018-05-17T20:04:48Z			update from find the first assignment to return the index of the first  token in an assignemnt linei _guess_ the parenthesis thing allow unpacking ab  foo  
2018-05-17T20:05:35Z			hum ok will reread that one first pass is done 
2018-05-17T20:09:15Z			you _may_ be able to make that more readable by using multiple ifs and a continue the other question that come to mind about find the first magic assignment is what if there is multiple magics assignments  
2018-05-17T20:12:52Z			premature opt is the root of all evil still the following seem like it _may_ be a repetitive pattern        for line in tokens_by_line            assign_ix  _find_assign_opline            if assign_ix is not none                     and lenline  assign_ix  2 					and token checkif this is used by other external transformers maybe figure out how to extract this logic 
2018-05-17T20:15:29Z			ok 
2018-05-17T22:59:24Z			im starting to be worried of attaching priorities to class themselvesshould we register them with a priority  that seem more flexible not sure yet just gut feeling 
2018-05-17T23:04:55Z			we likely want to make sure parenlev always 0 same in other similar method not sure if it is possible though 
2018-05-17T23:07:06Z			i guess thats for debug its unused i think 
2018-05-17T23:20:10Z			sanity check it is not called more than 100 times for now  
2018-05-17T23:25:46Z			ok 
2018-05-17T23:26:37Z			emit deprecation  
2018-05-17T23:33:04Z			ok 
2018-06-21T20:12:03Z			willingc your  7 and 0 keys are either swapped or youre used to software below 10  ive edited a couple of your comments to say 70 instead of 07 as i think thats what you meant  
2018-06-24T20:50:24Z			done 
2018-06-24T20:50:44Z			done  
2019-03-26T01:33:34Z			im not a huge fan i believe we should not even call this function if we know its a filename and not binary but i see how the code does not make it easy to refactor so sounds good and we should put that on technical debt for now thnaks  
2019-03-26T01:33:34Z			im not a huge fan i believe we should not even call this function if we know its a filename and not binary but i see how the code does not make it easy to refactor so sounds good and we should put that on technical debt for now thnaks  
2019-03-20T19:50:06Z			thanks  
2019-03-20T19:50:06Z			thanks  
2019-03-19T19:42:18Z			that looks good to me thanks  apologies for the delay in reviewing and welcome to the party  
2019-03-19T19:42:18Z			that looks good to me thanks  apologies for the delay in reviewing and welcome to the party  
2019-03-11T18:38:51Z			thanks for your contribution and congrats i know it is a sometime scary step  you did almost everything right youll just see people ask you to not send the pr from master of your fork but use a featurebranch though thats a detail and it does not matter for now ill try to come back to review this as soon as possible though im quite busy this week so i cant promise from a quick read that looks great i just need to understand it and find out how to fix the tests thanks  
2019-03-19T20:01:25Z			starting to look into this  
2019-03-19T21:01:22Z			would you mind having a look at this new version  i proposed an alternative with less recursion which appear to work on my machine test and docs are still needed though and code need to be cleaned up 
2019-03-19T21:10:10Z			hey  basic test seem to pass sounds like a good start daharn how familiar are you with gitgithub  will you manage to get my changes on your machine and can take care of someof the cleaning documenting  or do you need some extra guidance   
2019-03-21T23:30:05Z			thanks  much appreciated  
2019-03-11T18:38:51Z			thanks for your contribution and congrats i know it is a sometime scary step  you did almost everything right youll just see people ask you to not send the pr from master of your fork but use a featurebranch though thats a detail and it does not matter for now ill try to come back to review this as soon as possible though im quite busy this week so i cant promise from a quick read that looks great i just need to understand it and find out how to fix the tests thanks  
2019-03-19T20:01:25Z			starting to look into this  
2019-03-19T21:01:22Z			would you mind having a look at this new version  i proposed an alternative with less recursion which appear to work on my machine test and docs are still needed though and code need to be cleaned up 
2019-03-19T21:10:10Z			hey  basic test seem to pass sounds like a good start daharn how familiar are you with gitgithub  will you manage to get my changes on your machine and can take care of someof the cleaning documenting  or do you need some extra guidance   
2019-03-21T23:30:05Z			thanks  much appreciated  
2019-03-09T00:19:24Z			thanks  
2019-03-09T00:19:24Z			thanks  
2019-03-06T23:42:14Z			thanks  
2019-03-06T23:42:14Z			thanks  
2019-02-23T17:02:54Z			ive fixed and consolidated things all the text in docssourcewhatsnewpr will be automatically pull into developpement at the right time rst is a bit annoying with the syntax so ive taken your text and fixed it  it is just annoying details your learn with lots of experience test are passing now so im going to merge thanks  
2019-02-23T17:02:54Z			ive fixed and consolidated things all the text in docssourcewhatsnewpr will be automatically pull into developpement at the right time rst is a bit annoying with the syntax so ive taken your text and fixed it  it is just annoying details your learn with lots of experience test are passing now so im going to merge thanks  
2019-02-21T01:36:03Z			sounds good thanks  
2019-02-21T01:36:03Z			sounds good thanks  
2019-02-19T02:38:31Z			cmentzel thats your code you should review it p 
2019-02-20T17:03:34Z			many thanks cmentzel  for the thorough review   
2019-02-19T02:38:31Z			cmentzel thats your code you should review it p 
2019-02-20T17:03:34Z			many thanks cmentzel  for the thorough review   
2019-02-18T19:43:39Z			thanks  
2019-02-18T19:43:39Z			thanks  
2019-02-05T18:21:40Z			njsmith mind giving it a try  im going to guess astchanges will will likely have ripple in jedi as well 
2019-02-05T18:28:07Z			none this should just fix things on 38 
2019-02-05T18:30:34Z			damn via conda  i some point i had a conda recipe that was faking a master as being a 36 but it was breaking too often   
2019-02-06T16:11:43Z			ive added 38dev but as we are failing on nightly with the ast transformers im going to assume it will fail as well and someone need to investigate why some transformations are not being applied  
2019-02-07T02:53:10Z			and so apparently num has been renamed to constant  in the ast  
2019-02-07T03:02:38Z			ok 3 more test fixed takluyver i might need help on some of these errors 
2019-02-07T03:11:45Z			its unclear to me whats the difference between noden and nodevalue are they alias to each other now  if so should one be deprecated  it also seem that both num and str are now folded into the constant ast node  
2019-02-07T03:13:57Z			asmeurer  williamstein dont you have ast transformers  if so that will affect you  
2019-02-07T16:41:38Z			ok test are passing id love for someone to make sure the code make sens i wrote that by chunks of 5 min here and there so it might not be super coherent  
2019-02-05T18:21:40Z			njsmith mind giving it a try  im going to guess astchanges will will likely have ripple in jedi as well 
2019-02-05T18:28:07Z			none this should just fix things on 38 
2019-02-05T18:30:34Z			damn via conda  i some point i had a conda recipe that was faking a master as being a 36 but it was breaking too often   
2019-02-06T16:11:43Z			ive added 38dev but as we are failing on nightly with the ast transformers im going to assume it will fail as well and someone need to investigate why some transformations are not being applied  
2019-02-07T02:53:10Z			and so apparently num has been renamed to constant  in the ast  
2019-02-07T03:02:38Z			ok 3 more test fixed takluyver i might need help on some of these errors 
2019-02-07T03:11:45Z			its unclear to me whats the difference between noden and nodevalue are they alias to each other now  if so should one be deprecated  it also seem that both num and str are now folded into the constant ast node  
2019-02-07T03:13:57Z			asmeurer  williamstein dont you have ast transformers  if so that will affect you  
2019-02-07T16:41:38Z			ok test are passing id love for someone to make sure the code make sens i wrote that by chunks of 5 min here and there so it might not be super coherent  
2019-02-05T02:04:15Z			thanks i added one commit     fix api compatibility    wrap into the with provisionalcompleter and return a list instead of    an iterator just in case    also add types hintssounds good otherwise  
2019-02-18T20:11:50Z			thanks  
2019-02-05T02:04:15Z			thanks i added one commit     fix api compatibility    wrap into the with provisionalcompleter and return a list instead of    an iterator just in case    also add types hintssounds good otherwise  
2019-02-18T20:11:50Z			thanks  
2019-01-30T21:40:14Z			 i also realized that the api in corecompleterpy has some todosnoone in particular it would be great to get some of that done but lets focus on unicode so far from your code i see where some of the misunderstanding and issue are currently in ipython you can do unicode name  unicode symbol for examplegreek small letter eta  ηthis is done through unicodedatalookup as you discovered if you look carefully you will see that this is already done in unicode_name_matches around line 1664 one thing we do not have though is if someone type only greek smtab we have no way to suggest all letter eta and there is no afaict simple way builtin in python to achieve this we need to build this possibility ahead of timeto do so we need to first build a list of all unicode names first lets try to do it only for ascii for a to z 65 to 90httpeehawaiiedutepee160bookchap4subsection2111htmlin 4 import unicodedata    names      for c in range65 90        try            namesappendunicodedatanamechrc        except valueerror            pass    namesout4latin capital letter a latin capital letter b latin capital letter c latin capital letter d latin capital letter e latin capital letter f latin capital letter g latin capital letter h latin capital letter i latin capital letter j latin capital letter k latin capital letter l latin capital letter m latin capital letter n latin capital letter o latin capital letter p latin capital letter q latin capital letter r latin capital letter s latin capital letter t latin capital letter u latin capital letter v latin capital letter w latin capital letter x latin capital letter yso now lets try to slightly modify you function fwd_unicode_matchesin 28 def fwd_unicode_matchself textstr          initial code based on latex_matches method             slashpos  textrfind              if text starts with slash             printslashpos  debug             if slashpos  1                 s  textslashpos1   note the 1                     prints  debug                  instead of looking wether it is unicode return all the things from                 names that stars with s                     return s x for x in names if xstartswiths    lets try itin 27 fwd_unicode_matchnone gre0greout27 gre   good nothing we did not attempt to find greek letters so far lets try latinin 28 fwd_unicode_matchnone lat0latout28lat latin capital letter a  latin capital letter b  latin capital letter c  latin capital letter dok sounds good lets try to add that into completerpyhttpsgithubcomipythonipythoncomparemastercarreautryunicode4xxhttpsuserimagesgithubusercontentcom335567520143753b4a5e00249411e99663a87fbf928fcegifok good  it seem to work now we need to be a tiny bit fancier and allow upper and lower case to match and instead of allowing only 65 to 90 we want to try from 0 to 0 0x10ffff  1let me know if that is helpful im going to stop here on the explanation and let you play along with it  
2019-02-05T02:18:58Z			 is there a way we can share the author rights of these when theres a commit ready to merge i feel like most of the work was done by you even if im committing themhaha dont worry i have plenty of commits already there apparently is a way to ahve multiple authorshttpshelpgithubcomarticlescreatingacommitwithmultipleauthors but its cumbersome so feel free to take all the glory  
2019-02-18T22:25:39Z			apologies for the delay reviewing it seem the test are not passing due to a typo ill see if i can fix it  
2019-02-18T22:26:41Z			side question are you familiar with travis ci and how to check if the rest are passing   
2019-02-18T22:50:45Z			ive push relevant changes please have a look and let me know if that make sens  
2019-02-18T22:54:43Z			and now we are happy out first test seem to be green  seem like this il likely to be merged soon but first well need to make sure all the test are passing  
2019-02-19T02:48:11Z			all is green   let me know once you have reviewed and agreed with my change and we can merge  
2019-02-20T16:47:49Z			 so sorry for the delayno need to apologise you are not officially working on the project and you contributed  a lot already   im happy with the changes but i would be much happier if we shared authorship as previously discussed i have two commits in the branch now so ill have partial credit il like for you to look at a few things were planning participating in outreachy again  you expressed interest in being in an internship and i would love if we can do that woudl you mind reading participating in the following discussion  httpsdiscoursejupyterorgtthinkingaboutreapplyingtooutreachyinmay20194042  it would be great for you to write a small summary of what this pr achieves create a file with a few line in docssourcewhatsnewpr  it will be used to tell user about the new feature again work on what you like  
2019-02-21T01:33:11Z			the files in docssourcewhatsnewpr are just merged together at each release to create a final whats new changelog  which is published  therehttpsipythonreadthedocsioenstablewhatsnewversion7html it is mostly to tell users what is new in the release so can be a 1 line change or a multi page explanationhttpsipythonreadthedocsioenstablewhatsnewversion7htmlautowaitasynchronousrepl up to you  and how much text you think it is worth  
2019-01-30T21:40:14Z			 i also realized that the api in corecompleterpy has some todosnoone in particular it would be great to get some of that done but lets focus on unicode so far from your code i see where some of the misunderstanding and issue are currently in ipython you can do unicode name  unicode symbol for examplegreek small letter eta  ηthis is done through unicodedatalookup as you discovered if you look carefully you will see that this is already done in unicode_name_matches around line 1664 one thing we do not have though is if someone type only greek smtab we have no way to suggest all letter eta and there is no afaict simple way builtin in python to achieve this we need to build this possibility ahead of timeto do so we need to first build a list of all unicode names first lets try to do it only for ascii for a to z 65 to 90httpeehawaiiedutepee160bookchap4subsection2111htmlin 4 import unicodedata    names      for c in range65 90        try            namesappendunicodedatanamechrc        except valueerror            pass    namesout4latin capital letter a latin capital letter b latin capital letter c latin capital letter d latin capital letter e latin capital letter f latin capital letter g latin capital letter h latin capital letter i latin capital letter j latin capital letter k latin capital letter l latin capital letter m latin capital letter n latin capital letter o latin capital letter p latin capital letter q latin capital letter r latin capital letter s latin capital letter t latin capital letter u latin capital letter v latin capital letter w latin capital letter x latin capital letter yso now lets try to slightly modify you function fwd_unicode_matchesin 28 def fwd_unicode_matchself textstr          initial code based on latex_matches method             slashpos  textrfind              if text starts with slash             printslashpos  debug             if slashpos  1                 s  textslashpos1   note the 1                     prints  debug                  instead of looking wether it is unicode return all the things from                 names that stars with s                     return s x for x in names if xstartswiths    lets try itin 27 fwd_unicode_matchnone gre0greout27 gre   good nothing we did not attempt to find greek letters so far lets try latinin 28 fwd_unicode_matchnone lat0latout28lat latin capital letter a  latin capital letter b  latin capital letter c  latin capital letter dok sounds good lets try to add that into completerpyhttpsgithubcomipythonipythoncomparemastercarreautryunicode4xxhttpsuserimagesgithubusercontentcom335567520143753b4a5e00249411e99663a87fbf928fcegifok good  it seem to work now we need to be a tiny bit fancier and allow upper and lower case to match and instead of allowing only 65 to 90 we want to try from 0 to 0 0x10ffff  1let me know if that is helpful im going to stop here on the explanation and let you play along with it  
2019-02-05T02:18:58Z			 is there a way we can share the author rights of these when theres a commit ready to merge i feel like most of the work was done by you even if im committing themhaha dont worry i have plenty of commits already there apparently is a way to ahve multiple authorshttpshelpgithubcomarticlescreatingacommitwithmultipleauthors but its cumbersome so feel free to take all the glory  
2019-02-18T22:25:39Z			apologies for the delay reviewing it seem the test are not passing due to a typo ill see if i can fix it  
2019-02-18T22:26:41Z			side question are you familiar with travis ci and how to check if the rest are passing   
2019-02-18T22:50:45Z			ive push relevant changes please have a look and let me know if that make sens  
2019-02-18T22:54:43Z			and now we are happy out first test seem to be green  seem like this il likely to be merged soon but first well need to make sure all the test are passing  
2019-02-19T02:48:11Z			all is green   let me know once you have reviewed and agreed with my change and we can merge  
2019-02-20T16:47:49Z			 so sorry for the delayno need to apologise you are not officially working on the project and you contributed  a lot already   im happy with the changes but i would be much happier if we shared authorship as previously discussed i have two commits in the branch now so ill have partial credit il like for you to look at a few things were planning participating in outreachy again  you expressed interest in being in an internship and i would love if we can do that woudl you mind reading participating in the following discussion  httpsdiscoursejupyterorgtthinkingaboutreapplyingtooutreachyinmay20194042  it would be great for you to write a small summary of what this pr achieves create a file with a few line in docssourcewhatsnewpr  it will be used to tell user about the new feature again work on what you like  
2019-02-21T01:33:11Z			the files in docssourcewhatsnewpr are just merged together at each release to create a final whats new changelog  which is published  therehttpsipythonreadthedocsioenstablewhatsnewversion7html it is mostly to tell users what is new in the release so can be a 1 line change or a multi page explanationhttpsipythonreadthedocsioenstablewhatsnewversion7htmlautowaitasynchronousrepl up to you  and how much text you think it is worth  
2019-01-24T00:17:21Z			thanks for the bug report and the pr as you said there may be many places where the clear_frames need to be applied so maybe we should open an issue to track those as we are  still in a minor release cycle im in favor of not changing the behavior and postponing thee change of behavior if any to ipython 8though ive only scanned though the issue and need to get a better deeper lookim in the process of releasing 73 soon which is overdue by a month but im hopping to do minor releases monthly when possible anyway 
2019-01-24T00:17:21Z			thanks for the bug report and the pr as you said there may be many places where the clear_frames need to be applied so maybe we should open an issue to track those as we are  still in a minor release cycle im in favor of not changing the behavior and postponing thee change of behavior if any to ipython 8though ive only scanned though the issue and need to get a better deeper lookim in the process of releasing 73 soon which is overdue by a month but im hopping to do minor releases monthly when possible anyway 
2019-01-21T17:59:37Z			that seem reasonable lets try it im just going to postpone a bit merging in case i or you have to motivation to write some tests  
2019-01-24T00:06:17Z			well i was not able to get a test to fail so im going to get that in as is  
2019-01-21T17:59:37Z			that seem reasonable lets try it im just going to postpone a bit merging in case i or you have to motivation to write some tests  
2019-01-24T00:06:17Z			well i was not able to get a test to fail so im going to get that in as is  
2019-01-24T00:07:30Z			looks good we can refine later if needed thanks  
2019-01-24T00:07:30Z			looks good we can refine later if needed thanks  
2019-01-14T02:27:09Z			1 
2019-01-14T02:27:09Z			1 
2019-01-14T02:28:07Z			seem good we may need to make it reactive at some point if we  want to dynamically change it  
2019-01-14T02:28:07Z			seem good we may need to make it reactive at some point if we  want to dynamically change it  
2019-01-06T17:47:43Z			thanks that looks good to me  
2019-01-06T17:47:43Z			thanks that looks good to me  
2019-01-06T17:49:08Z			thanks that was likely painful to track  i know there was a few left   
2019-01-06T20:29:46Z			so maybe we can add a pythonwarningsall python werror m compileall  to travis ci   
2019-01-06T20:31:26Z			assuming it returns non0 if error  and 0 otherwise 
2019-01-06T17:49:08Z			thanks that was likely painful to track  i know there was a few left   
2019-01-06T20:29:46Z			so maybe we can add a pythonwarningsall python werror m compileall  to travis ci   
2019-01-06T20:31:26Z			assuming it returns non0 if error  and 0 otherwise 
2019-01-18T17:09:21Z			no i need to translate it from french im slowly coming back the cluster was under maintnance for the last few days so it was taking all my time  
2019-01-18T17:09:21Z			no i need to translate it from french im slowly coming back the cluster was under maintnance for the last few days so it was taking all my time  
2019-01-03T08:24:20Z			thanks looks good happy new year 
2019-01-03T08:24:20Z			thanks looks good happy new year 
2019-01-03T08:24:57Z			thanks for your patience happy new year  
2019-01-03T08:24:57Z			thanks for your patience happy new year  
2019-01-06T17:50:19Z			thanks  looks good  
2019-01-06T17:50:19Z			thanks  looks good  
2019-01-06T20:32:57Z			that seem reasonable to me thanks 
2019-03-12T21:38:53Z			can you please open a new issue for this  thanks  
2019-01-06T20:32:57Z			that seem reasonable to me thanks 
2019-03-12T21:38:53Z			can you please open a new issue for this  thanks  
2019-03-26T01:33:34Z			im not a huge fan i believe we should not even call this function if we know its a filename and not binary but i see how the code does not make it easy to refactor so sounds good and we should put that on technical debt for now thnaks  
2019-03-26T01:33:34Z			im not a huge fan i believe we should not even call this function if we know its a filename and not binary but i see how the code does not make it easy to refactor so sounds good and we should put that on technical debt for now thnaks  
2019-03-20T19:50:06Z			thanks  
2019-03-20T19:50:06Z			thanks  
2019-03-19T19:42:18Z			that looks good to me thanks  apologies for the delay in reviewing and welcome to the party  
2019-03-19T19:42:18Z			that looks good to me thanks  apologies for the delay in reviewing and welcome to the party  
2019-03-11T18:38:51Z			thanks for your contribution and congrats i know it is a sometime scary step  you did almost everything right youll just see people ask you to not send the pr from master of your fork but use a featurebranch though thats a detail and it does not matter for now ill try to come back to review this as soon as possible though im quite busy this week so i cant promise from a quick read that looks great i just need to understand it and find out how to fix the tests thanks  
2019-03-19T20:01:25Z			starting to look into this  
2019-03-19T21:01:22Z			would you mind having a look at this new version  i proposed an alternative with less recursion which appear to work on my machine test and docs are still needed though and code need to be cleaned up 
2019-03-19T21:10:10Z			hey  basic test seem to pass sounds like a good start daharn how familiar are you with gitgithub  will you manage to get my changes on your machine and can take care of someof the cleaning documenting  or do you need some extra guidance   
2019-03-21T23:30:05Z			thanks  much appreciated  
2019-03-11T18:38:51Z			thanks for your contribution and congrats i know it is a sometime scary step  you did almost everything right youll just see people ask you to not send the pr from master of your fork but use a featurebranch though thats a detail and it does not matter for now ill try to come back to review this as soon as possible though im quite busy this week so i cant promise from a quick read that looks great i just need to understand it and find out how to fix the tests thanks  
2019-03-19T20:01:25Z			starting to look into this  
2019-03-19T21:01:22Z			would you mind having a look at this new version  i proposed an alternative with less recursion which appear to work on my machine test and docs are still needed though and code need to be cleaned up 
2019-03-19T21:10:10Z			hey  basic test seem to pass sounds like a good start daharn how familiar are you with gitgithub  will you manage to get my changes on your machine and can take care of someof the cleaning documenting  or do you need some extra guidance   
2019-03-21T23:30:05Z			thanks  much appreciated  
2019-03-09T00:19:24Z			thanks  
2019-03-09T00:19:24Z			thanks  
2019-03-06T23:42:14Z			thanks  
2019-03-06T23:42:14Z			thanks  
2019-02-23T17:02:54Z			ive fixed and consolidated things all the text in docssourcewhatsnewpr will be automatically pull into developpement at the right time rst is a bit annoying with the syntax so ive taken your text and fixed it  it is just annoying details your learn with lots of experience test are passing now so im going to merge thanks  
2019-02-23T17:02:54Z			ive fixed and consolidated things all the text in docssourcewhatsnewpr will be automatically pull into developpement at the right time rst is a bit annoying with the syntax so ive taken your text and fixed it  it is just annoying details your learn with lots of experience test are passing now so im going to merge thanks  
2019-02-21T01:36:03Z			sounds good thanks  
2019-02-21T01:36:03Z			sounds good thanks  
2019-02-19T02:38:31Z			cmentzel thats your code you should review it p 
2019-02-20T17:03:34Z			many thanks cmentzel  for the thorough review   
2019-02-19T02:38:31Z			cmentzel thats your code you should review it p 
2019-02-20T17:03:34Z			many thanks cmentzel  for the thorough review   
2019-02-18T19:43:39Z			thanks  
2019-02-18T19:43:39Z			thanks  
2019-02-05T18:21:40Z			njsmith mind giving it a try  im going to guess astchanges will will likely have ripple in jedi as well 
2019-02-05T18:28:07Z			none this should just fix things on 38 
2019-02-05T18:30:34Z			damn via conda  i some point i had a conda recipe that was faking a master as being a 36 but it was breaking too often   
2019-02-06T16:11:43Z			ive added 38dev but as we are failing on nightly with the ast transformers im going to assume it will fail as well and someone need to investigate why some transformations are not being applied  
2019-02-07T02:53:10Z			and so apparently num has been renamed to constant  in the ast  
2019-02-07T03:02:38Z			ok 3 more test fixed takluyver i might need help on some of these errors 
2019-02-07T03:11:45Z			its unclear to me whats the difference between noden and nodevalue are they alias to each other now  if so should one be deprecated  it also seem that both num and str are now folded into the constant ast node  
2019-02-07T03:13:57Z			asmeurer  williamstein dont you have ast transformers  if so that will affect you  
2019-02-07T16:41:38Z			ok test are passing id love for someone to make sure the code make sens i wrote that by chunks of 5 min here and there so it might not be super coherent  
2019-02-05T18:21:40Z			njsmith mind giving it a try  im going to guess astchanges will will likely have ripple in jedi as well 
2019-02-05T18:28:07Z			none this should just fix things on 38 
2019-02-05T18:30:34Z			damn via conda  i some point i had a conda recipe that was faking a master as being a 36 but it was breaking too often   
2019-02-06T16:11:43Z			ive added 38dev but as we are failing on nightly with the ast transformers im going to assume it will fail as well and someone need to investigate why some transformations are not being applied  
2019-02-07T02:53:10Z			and so apparently num has been renamed to constant  in the ast  
2019-02-07T03:02:38Z			ok 3 more test fixed takluyver i might need help on some of these errors 
2019-02-07T03:11:45Z			its unclear to me whats the difference between noden and nodevalue are they alias to each other now  if so should one be deprecated  it also seem that both num and str are now folded into the constant ast node  
2019-02-07T03:13:57Z			asmeurer  williamstein dont you have ast transformers  if so that will affect you  
2019-02-07T16:41:38Z			ok test are passing id love for someone to make sure the code make sens i wrote that by chunks of 5 min here and there so it might not be super coherent  
2019-02-05T02:04:15Z			thanks i added one commit     fix api compatibility    wrap into the with provisionalcompleter and return a list instead of    an iterator just in case    also add types hintssounds good otherwise  
2019-02-18T20:11:50Z			thanks  
2019-02-05T02:04:15Z			thanks i added one commit     fix api compatibility    wrap into the with provisionalcompleter and return a list instead of    an iterator just in case    also add types hintssounds good otherwise  
2019-02-18T20:11:50Z			thanks  
2019-01-30T21:40:14Z			 i also realized that the api in corecompleterpy has some todosnoone in particular it would be great to get some of that done but lets focus on unicode so far from your code i see where some of the misunderstanding and issue are currently in ipython you can do unicode name  unicode symbol for examplegreek small letter eta  ηthis is done through unicodedatalookup as you discovered if you look carefully you will see that this is already done in unicode_name_matches around line 1664 one thing we do not have though is if someone type only greek smtab we have no way to suggest all letter eta and there is no afaict simple way builtin in python to achieve this we need to build this possibility ahead of timeto do so we need to first build a list of all unicode names first lets try to do it only for ascii for a to z 65 to 90httpeehawaiiedutepee160bookchap4subsection2111htmlin 4 import unicodedata    names      for c in range65 90        try            namesappendunicodedatanamechrc        except valueerror            pass    namesout4latin capital letter a latin capital letter b latin capital letter c latin capital letter d latin capital letter e latin capital letter f latin capital letter g latin capital letter h latin capital letter i latin capital letter j latin capital letter k latin capital letter l latin capital letter m latin capital letter n latin capital letter o latin capital letter p latin capital letter q latin capital letter r latin capital letter s latin capital letter t latin capital letter u latin capital letter v latin capital letter w latin capital letter x latin capital letter yso now lets try to slightly modify you function fwd_unicode_matchesin 28 def fwd_unicode_matchself textstr          initial code based on latex_matches method             slashpos  textrfind              if text starts with slash             printslashpos  debug             if slashpos  1                 s  textslashpos1   note the 1                     prints  debug                  instead of looking wether it is unicode return all the things from                 names that stars with s                     return s x for x in names if xstartswiths    lets try itin 27 fwd_unicode_matchnone gre0greout27 gre   good nothing we did not attempt to find greek letters so far lets try latinin 28 fwd_unicode_matchnone lat0latout28lat latin capital letter a  latin capital letter b  latin capital letter c  latin capital letter dok sounds good lets try to add that into completerpyhttpsgithubcomipythonipythoncomparemastercarreautryunicode4xxhttpsuserimagesgithubusercontentcom335567520143753b4a5e00249411e99663a87fbf928fcegifok good  it seem to work now we need to be a tiny bit fancier and allow upper and lower case to match and instead of allowing only 65 to 90 we want to try from 0 to 0 0x10ffff  1let me know if that is helpful im going to stop here on the explanation and let you play along with it  
2019-02-05T02:18:58Z			 is there a way we can share the author rights of these when theres a commit ready to merge i feel like most of the work was done by you even if im committing themhaha dont worry i have plenty of commits already there apparently is a way to ahve multiple authorshttpshelpgithubcomarticlescreatingacommitwithmultipleauthors but its cumbersome so feel free to take all the glory  
2019-02-18T22:25:39Z			apologies for the delay reviewing it seem the test are not passing due to a typo ill see if i can fix it  
2019-02-18T22:26:41Z			side question are you familiar with travis ci and how to check if the rest are passing   
2019-02-18T22:50:45Z			ive push relevant changes please have a look and let me know if that make sens  
2019-02-18T22:54:43Z			and now we are happy out first test seem to be green  seem like this il likely to be merged soon but first well need to make sure all the test are passing  
2019-02-19T02:48:11Z			all is green   let me know once you have reviewed and agreed with my change and we can merge  
2019-02-20T16:47:49Z			 so sorry for the delayno need to apologise you are not officially working on the project and you contributed  a lot already   im happy with the changes but i would be much happier if we shared authorship as previously discussed i have two commits in the branch now so ill have partial credit il like for you to look at a few things were planning participating in outreachy again  you expressed interest in being in an internship and i would love if we can do that woudl you mind reading participating in the following discussion  httpsdiscoursejupyterorgtthinkingaboutreapplyingtooutreachyinmay20194042  it would be great for you to write a small summary of what this pr achieves create a file with a few line in docssourcewhatsnewpr  it will be used to tell user about the new feature again work on what you like  
2019-02-21T01:33:11Z			the files in docssourcewhatsnewpr are just merged together at each release to create a final whats new changelog  which is published  therehttpsipythonreadthedocsioenstablewhatsnewversion7html it is mostly to tell users what is new in the release so can be a 1 line change or a multi page explanationhttpsipythonreadthedocsioenstablewhatsnewversion7htmlautowaitasynchronousrepl up to you  and how much text you think it is worth  
2019-01-30T21:40:14Z			 i also realized that the api in corecompleterpy has some todosnoone in particular it would be great to get some of that done but lets focus on unicode so far from your code i see where some of the misunderstanding and issue are currently in ipython you can do unicode name  unicode symbol for examplegreek small letter eta  ηthis is done through unicodedatalookup as you discovered if you look carefully you will see that this is already done in unicode_name_matches around line 1664 one thing we do not have though is if someone type only greek smtab we have no way to suggest all letter eta and there is no afaict simple way builtin in python to achieve this we need to build this possibility ahead of timeto do so we need to first build a list of all unicode names first lets try to do it only for ascii for a to z 65 to 90httpeehawaiiedutepee160bookchap4subsection2111htmlin 4 import unicodedata    names      for c in range65 90        try            namesappendunicodedatanamechrc        except valueerror            pass    namesout4latin capital letter a latin capital letter b latin capital letter c latin capital letter d latin capital letter e latin capital letter f latin capital letter g latin capital letter h latin capital letter i latin capital letter j latin capital letter k latin capital letter l latin capital letter m latin capital letter n latin capital letter o latin capital letter p latin capital letter q latin capital letter r latin capital letter s latin capital letter t latin capital letter u latin capital letter v latin capital letter w latin capital letter x latin capital letter yso now lets try to slightly modify you function fwd_unicode_matchesin 28 def fwd_unicode_matchself textstr          initial code based on latex_matches method             slashpos  textrfind              if text starts with slash             printslashpos  debug             if slashpos  1                 s  textslashpos1   note the 1                     prints  debug                  instead of looking wether it is unicode return all the things from                 names that stars with s                     return s x for x in names if xstartswiths    lets try itin 27 fwd_unicode_matchnone gre0greout27 gre   good nothing we did not attempt to find greek letters so far lets try latinin 28 fwd_unicode_matchnone lat0latout28lat latin capital letter a  latin capital letter b  latin capital letter c  latin capital letter dok sounds good lets try to add that into completerpyhttpsgithubcomipythonipythoncomparemastercarreautryunicode4xxhttpsuserimagesgithubusercontentcom335567520143753b4a5e00249411e99663a87fbf928fcegifok good  it seem to work now we need to be a tiny bit fancier and allow upper and lower case to match and instead of allowing only 65 to 90 we want to try from 0 to 0 0x10ffff  1let me know if that is helpful im going to stop here on the explanation and let you play along with it  
2019-02-05T02:18:58Z			 is there a way we can share the author rights of these when theres a commit ready to merge i feel like most of the work was done by you even if im committing themhaha dont worry i have plenty of commits already there apparently is a way to ahve multiple authorshttpshelpgithubcomarticlescreatingacommitwithmultipleauthors but its cumbersome so feel free to take all the glory  
2019-02-18T22:25:39Z			apologies for the delay reviewing it seem the test are not passing due to a typo ill see if i can fix it  
2019-02-18T22:26:41Z			side question are you familiar with travis ci and how to check if the rest are passing   
2019-02-18T22:50:45Z			ive push relevant changes please have a look and let me know if that make sens  
2019-02-18T22:54:43Z			and now we are happy out first test seem to be green  seem like this il likely to be merged soon but first well need to make sure all the test are passing  
2019-02-19T02:48:11Z			all is green   let me know once you have reviewed and agreed with my change and we can merge  
2019-02-20T16:47:49Z			 so sorry for the delayno need to apologise you are not officially working on the project and you contributed  a lot already   im happy with the changes but i would be much happier if we shared authorship as previously discussed i have two commits in the branch now so ill have partial credit il like for you to look at a few things were planning participating in outreachy again  you expressed interest in being in an internship and i would love if we can do that woudl you mind reading participating in the following discussion  httpsdiscoursejupyterorgtthinkingaboutreapplyingtooutreachyinmay20194042  it would be great for you to write a small summary of what this pr achieves create a file with a few line in docssourcewhatsnewpr  it will be used to tell user about the new feature again work on what you like  
2019-02-21T01:33:11Z			the files in docssourcewhatsnewpr are just merged together at each release to create a final whats new changelog  which is published  therehttpsipythonreadthedocsioenstablewhatsnewversion7html it is mostly to tell users what is new in the release so can be a 1 line change or a multi page explanationhttpsipythonreadthedocsioenstablewhatsnewversion7htmlautowaitasynchronousrepl up to you  and how much text you think it is worth  
2019-01-24T00:17:21Z			thanks for the bug report and the pr as you said there may be many places where the clear_frames need to be applied so maybe we should open an issue to track those as we are  still in a minor release cycle im in favor of not changing the behavior and postponing thee change of behavior if any to ipython 8though ive only scanned though the issue and need to get a better deeper lookim in the process of releasing 73 soon which is overdue by a month but im hopping to do minor releases monthly when possible anyway 
2019-01-24T00:17:21Z			thanks for the bug report and the pr as you said there may be many places where the clear_frames need to be applied so maybe we should open an issue to track those as we are  still in a minor release cycle im in favor of not changing the behavior and postponing thee change of behavior if any to ipython 8though ive only scanned though the issue and need to get a better deeper lookim in the process of releasing 73 soon which is overdue by a month but im hopping to do minor releases monthly when possible anyway 
2019-01-21T17:59:37Z			that seem reasonable lets try it im just going to postpone a bit merging in case i or you have to motivation to write some tests  
2019-01-24T00:06:17Z			well i was not able to get a test to fail so im going to get that in as is  
2019-01-21T17:59:37Z			that seem reasonable lets try it im just going to postpone a bit merging in case i or you have to motivation to write some tests  
2019-01-24T00:06:17Z			well i was not able to get a test to fail so im going to get that in as is  
2019-01-24T00:07:30Z			looks good we can refine later if needed thanks  
2019-01-24T00:07:30Z			looks good we can refine later if needed thanks  
2019-01-14T02:27:09Z			1 
2019-01-14T02:27:09Z			1 
2019-01-14T02:28:07Z			seem good we may need to make it reactive at some point if we  want to dynamically change it  
2019-01-14T02:28:07Z			seem good we may need to make it reactive at some point if we  want to dynamically change it  
2019-01-06T17:47:43Z			thanks that looks good to me  
2019-01-06T17:47:43Z			thanks that looks good to me  
2019-01-06T17:49:08Z			thanks that was likely painful to track  i know there was a few left   
2019-01-06T20:29:46Z			so maybe we can add a pythonwarningsall python werror m compileall  to travis ci   
2019-01-06T20:31:26Z			assuming it returns non0 if error  and 0 otherwise 
2019-01-06T17:49:08Z			thanks that was likely painful to track  i know there was a few left   
2019-01-06T20:29:46Z			so maybe we can add a pythonwarningsall python werror m compileall  to travis ci   
2019-01-06T20:31:26Z			assuming it returns non0 if error  and 0 otherwise 
2019-01-18T17:09:21Z			no i need to translate it from french im slowly coming back the cluster was under maintnance for the last few days so it was taking all my time  
2019-01-18T17:09:21Z			no i need to translate it from french im slowly coming back the cluster was under maintnance for the last few days so it was taking all my time  
2019-01-03T08:24:20Z			thanks looks good happy new year 
2019-01-03T08:24:20Z			thanks looks good happy new year 
2019-01-03T08:24:57Z			thanks for your patience happy new year  
2019-01-03T08:24:57Z			thanks for your patience happy new year  
2019-01-06T17:50:19Z			thanks  looks good  
2019-01-06T17:50:19Z			thanks  looks good  
2019-01-06T20:32:57Z			that seem reasonable to me thanks 
2019-03-12T21:38:53Z			can you please open a new issue for this  thanks  
2019-01-06T20:32:57Z			that seem reasonable to me thanks 
2019-03-12T21:38:53Z			can you please open a new issue for this  thanks  
2018-12-06T23:44:07Z			no worries noone else complained  
2018-12-06T23:44:07Z			no worries noone else complained  
2018-12-06T23:47:45Z			i guess we could also use subprocesscheck_call or something i didnt even remembered we had shellsystem 
2018-12-10T23:16:42Z			i fixed the tests lets get that in ill try to make a release close to end of month to keep the monthly release cadence  
2019-01-08T15:28:22Z			yes on my todo list but tiem is short and dayjob is taking more time than planned after holidays would you mind creating an issue that list the step that are remaining  you can copypast from the 72 one one of the biggest task is writing the whats new   
2019-01-22T16:39:42Z			basically a todolist with list of stem necessary beforeduringafter the release and list of issues changes that need to be added in the whats new i did it yesterday see 11571 i unfortunately risk to not be able to do any of that before this weekend so any help welcome  
2018-12-06T23:47:45Z			i guess we could also use subprocesscheck_call or something i didnt even remembered we had shellsystem 
2018-12-10T23:16:42Z			i fixed the tests lets get that in ill try to make a release close to end of month to keep the monthly release cadence  
2019-01-08T15:28:22Z			yes on my todo list but tiem is short and dayjob is taking more time than planned after holidays would you mind creating an issue that list the step that are remaining  you can copypast from the 72 one one of the biggest task is writing the whats new   
2019-01-22T16:39:42Z			basically a todolist with list of stem necessary beforeduringafter the release and list of issues changes that need to be added in the whats new i did it yesterday see 11571 i unfortunately risk to not be able to do any of that before this weekend so any help welcome  
2018-12-06T23:45:03Z			 the pr might not be the cleanest as it has several several commits i worked the whole patch solely from the github web ui let me know is squashing it is required for a mergei think its ok thanks for the pr  
2018-12-06T23:45:03Z			 the pr might not be the cleanest as it has several several commits i worked the whole patch solely from the github web ui let me know is squashing it is required for a mergei think its ok thanks for the pr  
2018-11-29T19:24:30Z			thanks  
2018-11-29T19:24:30Z			thanks  
2018-11-29T19:30:52Z			thats sounds reasonable to me does it has any reason to break user code   
2018-11-30T01:07:42Z			im going to leave that for 73 im worried about the consequences and would like it on master for a little longer im going to do a 72 today hope thats ok with you  
2018-12-06T23:44:30Z			sounds good lets get that in  
2018-11-29T19:30:52Z			thats sounds reasonable to me does it has any reason to break user code   
2018-11-30T01:07:42Z			im going to leave that for 73 im worried about the consequences and would like it on master for a little longer im going to do a 72 today hope thats ok with you  
2018-12-06T23:44:30Z			sounds good lets get that in  
2018-11-27T00:59:40Z			im 1 in principle will review when i have timeill also love to have an exception mimebundle that could be handled by the frontend with collapsible section and stuff  
2018-11-29T02:45:03Z			1 im going to try to get a release soon  
2018-11-30T03:53:34Z			and 72 is out currently writing announcements 
2018-11-27T00:59:40Z			im 1 in principle will review when i have timeill also love to have an exception mimebundle that could be handled by the frontend with collapsible section and stuff  
2018-11-29T02:45:03Z			1 im going to try to get a release soon  
2018-11-30T03:53:34Z			and 72 is out currently writing announcements 
2018-11-29T02:40:46Z			looks good many thanks  
2018-11-29T02:40:46Z			looks good many thanks  
2018-11-27T01:00:40Z			1 do you want to add a test   
2018-11-29T02:40:05Z			probably rare enough to not need test 
2018-11-27T01:00:40Z			1 do you want to add a test   
2018-11-29T02:40:05Z			probably rare enough to not need test 
2018-11-19T19:38:53Z			thanks that seem reasonable ill see if i can add a test to make sure there is no regressions 
2018-11-19T21:04:15Z			ive modified test to check for multiple dot in path thanks  
2018-11-19T19:38:53Z			thanks that seem reasonable ill see if i can add a test to make sure there is no regressions 
2018-11-19T21:04:15Z			ive modified test to check for multiple dot in path thanks  
2018-11-19T19:41:33Z			seem reasonable thanks  
2018-11-19T19:41:33Z			seem reasonable thanks  
2018-11-11T21:58:38Z			lgtm 
2018-11-11T21:58:38Z			lgtm 
2018-11-11T21:59:31Z			sounds good 
2018-11-11T21:59:40Z			thanks  
2018-11-11T21:59:31Z			sounds good 
2018-11-11T21:59:40Z			thanks  
2018-11-08T16:31:59Z			the error is unrelated to what you did we just added a subclasses field and other part of ipython is not handling that correctly ive added one commit that hopefully should fix thatmany thanks and awesome work  lets wait for the test to pass just to make sure i did not forget anything and then we can merge what you did into master meeseeksdev say congrats cmentzel meeseeksdev party 
2018-11-08T17:50:56Z			all is green  congrats  
2018-11-08T16:31:59Z			the error is unrelated to what you did we just added a subclasses field and other part of ipython is not handling that correctly ive added one commit that hopefully should fix thatmany thanks and awesome work  lets wait for the test to pass just to make sure i did not forget anything and then we can merge what you did into master meeseeksdev say congrats cmentzel meeseeksdev party 
2018-11-08T17:50:56Z			all is green  congrats  
2018-11-03T01:38:24Z			meeseeksdev backport to 5x 
2018-11-03T01:38:24Z			meeseeksdev backport to 5x 
2018-11-03T00:53:51Z			the failure  on python 3 is unrelated its just that the new version of pip is incompatible with python 3im happy to get that in but there will likely not be any further release of ipython 6x do you have any specific reason to want to fix 6x  
2018-11-05T16:55:43Z			for all the difference between 6x and 7x see the whats newhttpsipythonreadthedocsioenstablewhatsnewversion7html there is no major compatibility issue if you dont use custom extensions im happy to get the fix in the 6x branch but its likely never going to end up on pypi or conda you can still install source from a specific commit if that helps that is unless there is interest for someone to maintain 6x but the current core dev are doing that on their free time and already plenty to dobut in general yes as an open source project we only support the latest branch in this case 7x and use the latest unless you you really need to stick to an old one if you need support for an old version you can also discuss support with anaconda inc 
2018-11-29T02:39:40Z			many thanks for your contribution im going to close this as it is likely to never be released still looking forward to more pr coming from you  
2018-11-03T00:53:51Z			the failure  on python 3 is unrelated its just that the new version of pip is incompatible with python 3im happy to get that in but there will likely not be any further release of ipython 6x do you have any specific reason to want to fix 6x  
2018-11-05T16:55:43Z			for all the difference between 6x and 7x see the whats newhttpsipythonreadthedocsioenstablewhatsnewversion7html there is no major compatibility issue if you dont use custom extensions im happy to get the fix in the 6x branch but its likely never going to end up on pypi or conda you can still install source from a specific commit if that helps that is unless there is interest for someone to maintain 6x but the current core dev are doing that on their free time and already plenty to dobut in general yes as an open source project we only support the latest branch in this case 7x and use the latest unless you you really need to stick to an old one if you need support for an old version you can also discuss support with anaconda inc 
2018-11-29T02:39:40Z			many thanks for your contribution im going to close this as it is likely to never be released still looking forward to more pr coming from you  
2018-11-03T21:38:18Z			 this is my first pr please let me know if you have any feedbackbtw sorry i did only  quick review earlier without reading first welcome to github and congratulation on your first pr you handled git and github well i know it can be a scary part your pr looks good as you might see on the ui we have continuous integration that run tests and caught that you actually forgot to rename some of the variables there are several possibility to fix that you can do the modification locally on your own branch and push on github the pr will update and retest if you dont have the time or wish for any reason not to do it we can do that for you but we prefer to leave contributor a chance to learn if you have any questions feel free to ask and well do our best to respond  
2018-11-29T02:38:01Z			thanks emjobson apologies for the delay in rereviewing i did not notice you pushed new commits as a small detail you may want to update your git config with your email for the commit to be properly attributed to you you can issue git config global useremail youremail  
2018-11-29T02:38:39Z			 this is my first pr please let me know if you have any feedbackcongrats on your first pr and apologies again for the delay in reviewmerging 
2018-11-03T21:38:18Z			 this is my first pr please let me know if you have any feedbackbtw sorry i did only  quick review earlier without reading first welcome to github and congratulation on your first pr you handled git and github well i know it can be a scary part your pr looks good as you might see on the ui we have continuous integration that run tests and caught that you actually forgot to rename some of the variables there are several possibility to fix that you can do the modification locally on your own branch and push on github the pr will update and retest if you dont have the time or wish for any reason not to do it we can do that for you but we prefer to leave contributor a chance to learn if you have any questions feel free to ask and well do our best to respond  
2018-11-29T02:38:01Z			thanks emjobson apologies for the delay in rereviewing i did not notice you pushed new commits as a small detail you may want to update your git config with your email for the commit to be properly attributed to you you can issue git config global useremail youremail  
2018-11-29T02:38:39Z			 this is my first pr please let me know if you have any feedbackcongrats on your first pr and apologies again for the delay in reviewmerging 
2018-10-31T16:39:27Z			do we still have a js group  1 will look at it closer from my phone 
2018-10-31T16:39:42Z			from my desktop  
2018-10-31T16:39:27Z			do we still have a js group  1 will look at it closer from my phone 
2018-10-31T16:39:42Z			from my desktop  
2018-11-01T16:27:10Z			there is something weird happening in the test we probably need to pin the pip version on old version of python  
2018-11-02T16:20:28Z			 are you blocking the pr due to unrelated issues with the travis ci testingblocking is a strong word id like to get it fix either by someone or me to make sure there is no other regressions  but there is just so much hours in days and i only working on ipython as volunteer so ill get to it when i have time getting this release will also take some time ill see if i can work on that this weekend btw we have a bot to do backport if necessary so usually you can either just as a commiter to mention the bot or we can whitelist people to be able to mention the bot  
2018-11-03T21:31:41Z			  from master required a manual merge conflict resolutionbut maybe your bot uses some clever flags to overcome thatah ok so manual backport is fine the bot does not do anything fancy i was just mentioning it just in case ive rebased as i should have fix the testing issue on master to make sure the test are passing once its green i can merge 
2018-11-03T21:39:27Z			test green getting that in thanks  
2018-11-01T16:27:10Z			there is something weird happening in the test we probably need to pin the pip version on old version of python  
2018-11-02T16:20:28Z			 are you blocking the pr due to unrelated issues with the travis ci testingblocking is a strong word id like to get it fix either by someone or me to make sure there is no other regressions  but there is just so much hours in days and i only working on ipython as volunteer so ill get to it when i have time getting this release will also take some time ill see if i can work on that this weekend btw we have a bot to do backport if necessary so usually you can either just as a commiter to mention the bot or we can whitelist people to be able to mention the bot  
2018-11-03T21:31:41Z			  from master required a manual merge conflict resolutionbut maybe your bot uses some clever flags to overcome thatah ok so manual backport is fine the bot does not do anything fancy i was just mentioning it just in case ive rebased as i should have fix the testing issue on master to make sure the test are passing once its green i can merge 
2018-11-03T21:39:27Z			test green getting that in thanks  
2018-10-30T15:25:25Z			thanks 
2018-10-30T15:25:25Z			thanks 
2018-10-30T15:25:59Z			oops thanks  
2018-10-30T15:25:59Z			oops thanks  
2018-10-30T19:48:48Z			thanks  
2018-10-30T19:48:48Z			thanks  
2018-10-30T15:26:54Z			1 thanks  
2018-10-30T15:26:54Z			1 thanks  
2018-10-27T21:43:18Z			see httpsgithubcomcondaforgeipythonfeedstockpull63 
2018-10-27T21:43:18Z			see httpsgithubcomcondaforgeipythonfeedstockpull63 
2018-10-27T17:09:42Z			looks good  thanks  
2018-10-27T17:09:42Z			looks good  thanks  
2018-10-27T17:08:07Z			lgtm 
2018-10-27T17:08:16Z			thanks 
2018-10-27T17:08:07Z			lgtm 
2018-10-27T17:08:16Z			thanks 
2018-10-25T03:17:24Z			thanks  
2018-10-25T03:17:24Z			thanks  
2018-10-24T23:22:37Z			thanks  
2018-10-24T23:22:37Z			thanks  
2018-10-24T23:29:29Z			thanks  
2018-10-24T23:29:29Z			thanks  
2018-10-21T19:25:01Z			img width732 altscreen shot 20181021 at 12 19 35 srchttpsuserimagesgithubusercontentcom33556747271233a1395800d52b11e89d80fc327b582aa1pngwatch out you are adding commits that should not be part of this pullrequest but you did made it from a different branch so you did good ive fix that for you you most likely want to do something like git checkout master git fetch origin git reset hard originmasterso that your local master branch is exactly as ipythonmaster 
2018-10-21T19:28:21Z			that looks good we can merge that and iterate once the test are passing 
2018-10-21T20:49:17Z			 is this anything known previously if not can i open an issue and try to solve ityes you can try to solve it i recently made the directive turn warnings into errorslet me know if you have difficulty narrowing down the bug i can give a hand  
2018-10-22T14:39:32Z			there iswas a github outage hence why things are not working properly some of the changes on the repo have been undone and messages have disappeared the best is too keep an eye on httpsstatusgithubcommessages until all is green and then start reworking on things  
2018-10-25T03:19:38Z			 the problem was happening due to merge conflicts was this nothing to do with python version or anything elseyes and no there was still som conflict where merged marked like the following were still there one headdoctestdoctest  other headand we build the documentation only on python 37 so it was failing only on python 37   
2018-10-25T21:10:03Z			 thank you so much for being so patient with me always youve done a great job and are already way better than me when i started  i was adding semicolon at the end of lines  and youve dome of lot of work and freeing us time to do more complex task i hope in a couple of weeks youll fix my mistakes  
2018-10-21T19:25:01Z			img width732 altscreen shot 20181021 at 12 19 35 srchttpsuserimagesgithubusercontentcom33556747271233a1395800d52b11e89d80fc327b582aa1pngwatch out you are adding commits that should not be part of this pullrequest but you did made it from a different branch so you did good ive fix that for you you most likely want to do something like git checkout master git fetch origin git reset hard originmasterso that your local master branch is exactly as ipythonmaster 
2018-10-21T19:28:21Z			that looks good we can merge that and iterate once the test are passing 
2018-10-21T20:49:17Z			 is this anything known previously if not can i open an issue and try to solve ityes you can try to solve it i recently made the directive turn warnings into errorslet me know if you have difficulty narrowing down the bug i can give a hand  
2018-10-22T14:39:32Z			there iswas a github outage hence why things are not working properly some of the changes on the repo have been undone and messages have disappeared the best is too keep an eye on httpsstatusgithubcommessages until all is green and then start reworking on things  
2018-10-25T03:19:38Z			 the problem was happening due to merge conflicts was this nothing to do with python version or anything elseyes and no there was still som conflict where merged marked like the following were still there one headdoctestdoctest  other headand we build the documentation only on python 37 so it was failing only on python 37   
2018-10-25T21:10:03Z			 thank you so much for being so patient with me always youve done a great job and are already way better than me when i started  i was adding semicolon at the end of lines  and youve dome of lot of work and freeing us time to do more complex task i hope in a couple of weeks youll fix my mistakes  
2018-10-21T01:09:00Z			thanks ill have a look and try to understand  between pythons and cpythonswhat do you mean by that  do you mean ipythons   if so we probably want to fix out tokenize method itself  
2018-10-21T15:38:42Z			ok that make sens so one question would it make sens to move that inside make_tokens_by_line so that make_tokens_by_line  return consistent value regardless of the version of python  that feels cleaner to me  thoughts   
2018-10-21T20:47:16Z			 yes thank you i missed that it definitely makes sense to move the logic into make_tokens_by_line ive made another commit for thatok great i added a suggestion of comment to remind us when to remove that in a couple of years once this is done im 1 
2018-10-22T14:41:26Z			takluyver   good to see you  i would suggest waiting for gh to be back on green httpsstatusgithubcommessagessome messages have been lost and pr unmerged 
2018-10-22T15:00:11Z			 it seems to be mostly back to normal nowfor you you are probably going through a eu server   
2018-10-23T21:50:28Z			i would have to read the code but converting to new version seem the rightmove lets try to change and see if the test are failling on mon oct 22 2018 2244 hai notificationsgithubcom wrote                   remember if the lines ends in a new line         ends_with_newline  false         for character in reversedcell             if character  n                 ends_with_newline  true                 break             elif characterstrip                 break             else                 continue         if ends_with_newline              append an newline for consistent tokenization              see httpsbugspythonorgissue33899             cell  n this is the code at the top of the check_complete i think the last if statement should have been if not end_with_newline if so the fix could be further simplified also currently the logic of the fix is to convert from the recently fixed module in python 371 back to the old form in prior python version it would be more appropriate to change the fix to address the problem in older python version rather than manipulating the now fixed implementation any thoughts  you are receiving this because you commented reply to this email directly view it on github httpsgithubcomipythonipythonpull11425issuecomment432100889 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez5ya0s0vsgzitvyoq14ckuh62wkoks5unqzvgajpzm4xyiqf  
2018-10-24T23:31:23Z			thanks for working with us on this deeply appreciated you may still be able to get a tshirt for hacktoberfesthttpshacktoberfestdigitaloceancom  
2018-10-21T01:09:00Z			thanks ill have a look and try to understand  between pythons and cpythonswhat do you mean by that  do you mean ipythons   if so we probably want to fix out tokenize method itself  
2018-10-21T15:38:42Z			ok that make sens so one question would it make sens to move that inside make_tokens_by_line so that make_tokens_by_line  return consistent value regardless of the version of python  that feels cleaner to me  thoughts   
2018-10-21T20:47:16Z			 yes thank you i missed that it definitely makes sense to move the logic into make_tokens_by_line ive made another commit for thatok great i added a suggestion of comment to remind us when to remove that in a couple of years once this is done im 1 
2018-10-22T14:41:26Z			takluyver   good to see you  i would suggest waiting for gh to be back on green httpsstatusgithubcommessagessome messages have been lost and pr unmerged 
2018-10-22T15:00:11Z			 it seems to be mostly back to normal nowfor you you are probably going through a eu server   
2018-10-23T21:50:28Z			i would have to read the code but converting to new version seem the rightmove lets try to change and see if the test are failling on mon oct 22 2018 2244 hai notificationsgithubcom wrote                   remember if the lines ends in a new line         ends_with_newline  false         for character in reversedcell             if character  n                 ends_with_newline  true                 break             elif characterstrip                 break             else                 continue         if ends_with_newline              append an newline for consistent tokenization              see httpsbugspythonorgissue33899             cell  n this is the code at the top of the check_complete i think the last if statement should have been if not end_with_newline if so the fix could be further simplified also currently the logic of the fix is to convert from the recently fixed module in python 371 back to the old form in prior python version it would be more appropriate to change the fix to address the problem in older python version rather than manipulating the now fixed implementation any thoughts  you are receiving this because you commented reply to this email directly view it on github httpsgithubcomipythonipythonpull11425issuecomment432100889 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez5ya0s0vsgzitvyoq14ckuh62wkoks5unqzvgajpzm4xyiqf  
2018-10-24T23:31:23Z			thanks for working with us on this deeply appreciated you may still be able to get a tshirt for hacktoberfesthttpshacktoberfestdigitaloceancom  
2018-10-21T15:40:36Z			i remove nitpickytrue there are too many errors 
2018-10-21T15:40:36Z			i remove nitpickytrue there are too many errors 
2018-10-21T01:07:37Z			thanks  ill have to look at that more in depth but it would be good to have a test to not have regressions   
2018-10-21T01:07:37Z			thanks  ill have to look at that more in depth but it would be good to have a test to not have regressions   
2018-10-20T17:56:39Z			thanks closing this for nowgood job on getting starting with github looking forward to your contributions  
2018-10-20T17:56:39Z			thanks closing this for nowgood job on getting starting with github looking forward to your contributions  
2018-10-18T01:08:37Z			that fix the parso thing now we can see regression in nightly 
2018-10-18T01:08:37Z			that fix the parso thing now we can see regression in nightly 
2018-10-16T03:18:43Z			 i i include okexcept as an argument to the directive things do finish iirc the behavior on 6x was to print a warning to stdout with a message telling you to use okexceptyes but that was changed explicitley in httpsgithubcomipythonipythonpull11321 should maybe have been better documented to actually start to catch regression in documentation i can try to make it configurable though one other discussion was to make okexcept fail if there is actually no exception  
2018-10-16T03:36:12Z			you can now set ipython_strict_fail  false in your configpy to get back previous behavior if you have a better name  
2018-10-16T16:04:53Z			 ipython_warning_is_error to match warningiserrordone syntaxerror is now detected as a error as well i restored the old documentation from 013 that may need some polish  
2018-10-18T01:31:58Z			thanks choldgraf for the feedback ive open 11410 as a easy first issue to follow up on im going to get that in as it fixes some functionalities 
2018-10-21T17:52:00Z			no problem restructured text can be complicated at timeon sun oct 21 2018 1049 luciana da costa marques notificationsgithubcom wrote lucianamarques commented on this pull request  in docssourcedevelopmentipython_directiverst httpsgithubcomipythonipythonpull11402discussion_r226871658   suppress      execute the ipython input block but suppress the input and output     block from the rendered output  also can be applied to the entire      ipython block as a directive option with suppress  verbatim      insert the input and output block in verbatim but autoincrement     the line numbers internally the interpreter will be fed an empty     string so it is a noop that keeps line numbering consistent     also can be applied to the entire  ipython block as a     directive option with verbatim  savefig outfile image_options hey carreau i think i had this doubt because i was not familiar with restructuretext until today thank you for your reply  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11402discussion_r226871658 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez1fiy8gzr6on8z8rv6stiry3xyyrks5unlongajpzm4xdzxn  
2018-10-16T03:18:43Z			 i i include okexcept as an argument to the directive things do finish iirc the behavior on 6x was to print a warning to stdout with a message telling you to use okexceptyes but that was changed explicitley in httpsgithubcomipythonipythonpull11321 should maybe have been better documented to actually start to catch regression in documentation i can try to make it configurable though one other discussion was to make okexcept fail if there is actually no exception  
2018-10-16T03:36:12Z			you can now set ipython_strict_fail  false in your configpy to get back previous behavior if you have a better name  
2018-10-16T16:04:53Z			 ipython_warning_is_error to match warningiserrordone syntaxerror is now detected as a error as well i restored the old documentation from 013 that may need some polish  
2018-10-18T01:31:58Z			thanks choldgraf for the feedback ive open 11410 as a easy first issue to follow up on im going to get that in as it fixes some functionalities 
2018-10-21T17:52:00Z			no problem restructured text can be complicated at timeon sun oct 21 2018 1049 luciana da costa marques notificationsgithubcom wrote lucianamarques commented on this pull request  in docssourcedevelopmentipython_directiverst httpsgithubcomipythonipythonpull11402discussion_r226871658   suppress      execute the ipython input block but suppress the input and output     block from the rendered output  also can be applied to the entire      ipython block as a directive option with suppress  verbatim      insert the input and output block in verbatim but autoincrement     the line numbers internally the interpreter will be fed an empty     string so it is a noop that keeps line numbering consistent     also can be applied to the entire  ipython block as a     directive option with verbatim  savefig outfile image_options hey carreau i think i had this doubt because i was not familiar with restructuretext until today thank you for your reply  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11402discussion_r226871658 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez1fiy8gzr6on8z8rv6stiry3xyyrks5unlongajpzm4xdzxn  
2018-10-16T17:06:48Z			 im having problems with squashing all commits into one but my changes are theredo you mind if i do that for you and push on your branch  also sidenote you want to learn how to work on multiple branches if you look at the top of this pr you can see that the request is to merge lucianamarquesmaster into ipythonmaster that prevents you from working on multiple things at the same time usually you want to something along the line of git branch fix11401 git checkout fix11401 work git push and the the pr will ask to merge lucianamarquesfix11401 into ipythonmasterand you can keep working on other branches without worry of fix11401 being modified the workflow here is approximatif you are free to modify it but learning on how to manage multiple branches will be extremely helpfulldo not worry git is not obvious but youll learn your way around it  
2018-10-18T15:28:10Z			 im sorry for not answering you here earlier i was trying to fix it for myselfno worries i had an hour or two where i could work on that so i did here is a gif that redoes the rebasesquashrebase examplehttpsuserimagesgithubusercontentcom335567471656735b705b80d2af11e89f0779f5eb77cb04gifthe i pushed with the forcewithlease option on your branch i think you already found a couple of other issues to work on ill try to keep tagging easy issuesyoure doing good so far  
2018-10-16T17:06:48Z			 im having problems with squashing all commits into one but my changes are theredo you mind if i do that for you and push on your branch  also sidenote you want to learn how to work on multiple branches if you look at the top of this pr you can see that the request is to merge lucianamarquesmaster into ipythonmaster that prevents you from working on multiple things at the same time usually you want to something along the line of git branch fix11401 git checkout fix11401 work git push and the the pr will ask to merge lucianamarquesfix11401 into ipythonmasterand you can keep working on other branches without worry of fix11401 being modified the workflow here is approximatif you are free to modify it but learning on how to manage multiple branches will be extremely helpfulldo not worry git is not obvious but youll learn your way around it  
2018-10-18T15:28:10Z			 im sorry for not answering you here earlier i was trying to fix it for myselfno worries i had an hour or two where i could work on that so i did here is a gif that redoes the rebasesquashrebase examplehttpsuserimagesgithubusercontentcom335567471656735b705b80d2af11e89f0779f5eb77cb04gifthe i pushed with the forcewithlease option on your branch i think you already found a couple of other issues to work on ill try to keep tagging easy issuesyoure doing good so far  
2018-10-21T19:15:57Z			wow indeed many changes im find with getting that inill try to generate a table of the changes first though to add in the documentation in case of questions  
2018-10-25T00:01:03Z			taking nodes for myselfthe characters corresponding to the following have been removedelzxl textasciicaron underbar varepsilonthe characters corresponding to the following have been addedjmath underbar underleftrightarrow450 have the leading m removed 216 have mbfit  bistoping there so farfrom ipythoncore import latex_symbols as lsfrom ipythoncore import old_latex_symbols as olsintersect  setlsreverse_latex_symbolkeysintersectionsetolsreverse_latex_symbolkeysn0 m0 k0for u in sortedintersect    old  olsreverse_latex_symbolu    new  lsreverse_latex_symbolu    if old  new       if oldstartswithm and old3new2           m1       elif oldreplacembfit binew           k1       else           n1           printold has been renamed to  newim thinking we should support at least for the 70 series the oldname unicode  potential warning ill see if it can write that up edit further refined in 32 from ipythoncore import latex_symbols as ls     from ipythoncore import old_latex_symbols as ols     intersect  setlsreverse_latex_symbolkeysintersectionsetolsreverse_latex_symbolkeys         changes           old_new        m       mbfit bi      mbf b      b       mit i      elz       text       mitbbb bbi              for x in old_new         changesx  0     changesother  0         for u in sortedintersect         old  olsreverse_latex_symbolu         new  lsreverse_latex_symbolu         if old  new            for on in old_new               if oldreplaceon  new                  changeson  1                  break            else                changesother 1                printf lslatex_symbolsnew type newtab was oldtab     changes 
2018-10-27T01:08:15Z			i added a file what do you think   
2018-10-27T17:08:43Z			ok great getting that in 
2018-10-21T19:15:57Z			wow indeed many changes im find with getting that inill try to generate a table of the changes first though to add in the documentation in case of questions  
2018-10-25T00:01:03Z			taking nodes for myselfthe characters corresponding to the following have been removedelzxl textasciicaron underbar varepsilonthe characters corresponding to the following have been addedjmath underbar underleftrightarrow450 have the leading m removed 216 have mbfit  bistoping there so farfrom ipythoncore import latex_symbols as lsfrom ipythoncore import old_latex_symbols as olsintersect  setlsreverse_latex_symbolkeysintersectionsetolsreverse_latex_symbolkeysn0 m0 k0for u in sortedintersect    old  olsreverse_latex_symbolu    new  lsreverse_latex_symbolu    if old  new       if oldstartswithm and old3new2           m1       elif oldreplacembfit binew           k1       else           n1           printold has been renamed to  newim thinking we should support at least for the 70 series the oldname unicode  potential warning ill see if it can write that up edit further refined in 32 from ipythoncore import latex_symbols as ls     from ipythoncore import old_latex_symbols as ols     intersect  setlsreverse_latex_symbolkeysintersectionsetolsreverse_latex_symbolkeys         changes           old_new        m       mbfit bi      mbf b      b       mit i      elz       text       mitbbb bbi              for x in old_new         changesx  0     changesother  0         for u in sortedintersect         old  olsreverse_latex_symbolu         new  lsreverse_latex_symbolu         if old  new            for on in old_new               if oldreplaceon  new                  changeson  1                  break            else                changesother 1                printf lslatex_symbolsnew type newtab was oldtab     changes 
2018-10-27T01:08:15Z			i added a file what do you think   
2018-10-27T17:08:43Z			ok great getting that in 
2018-10-15T01:28:39Z			cc tkf i believe that will fix your issue if you mind having a try  
2018-10-15T01:50:59Z			good thanks  
2018-10-15T01:28:39Z			cc tkf i believe that will fix your issue if you mind having a try  
2018-10-15T01:50:59Z			good thanks  
2018-10-14T17:44:10Z			thanks you did commit all your idea file though see herehttpshelpgithubcomarticlesignoringfilescreateaglobalgitignore on how to create a global git ignore file and add idea to it then we can walk through how to squash your history for those files to not be added to repo if you code work on python 37 at the repl you should see the followingin 1 import warnings    def foo        warningswarnoh noooo deprecationwarning   in 2 foousersbussonniermatthiasanacondabinipython3 deprecationwarning oh noooo  __requires__  ipython 
2018-10-14T17:46:03Z			good job and thanks eamanu for the review  
2018-10-14T18:02:27Z			feel free to ask if you want more guidance ill stay short on purpose  to gitve you the opportunity to figure it out by yourself   but i can give you detailed instructions if needed 
2018-10-14T20:38:15Z			its good let me show you how to rewrite the history to have only one clean commit and not have the intermediate idea files in historywell rebase interactive i and squash s the last two commits git rebase i head3vim open if you havent set editorpress i and edit the second and third line replace pick by spress esc  w q enter write your new commit messagenow you can force push here is it as a gifrebase examplehttpsuserimagesgithubusercontentcom33556746921876c1aa6500cfb511e899df0055bcb83b03gifif its too complicated i can do that for you  
2018-10-14T23:43:48Z			 what are the next steps now should we do some more testingno more step for this issue that you for this specific issue i dont think more testing is necessary ill just update 11333 so that once we drop 36 the code can actually be removed but that will take a couple of years good job 
2018-10-15T00:32:48Z			 do you have any suggestionsnot particularly ill have to go through and figure out if issues are easy or hard you can try to go through the list of what is needed for 71 releasehttpsgithubcomipythonipythonmilestone59 some of them have been fixed and just need to be closed you should be able to also apply a subset of labels to issueshttpsgithubcomipythonipythonblobmastermeeseeksdevymll11l17 by gently asking our bot like so meeseeksdev tag hacktoberfestill try to mark a few issue as good first issue andor help wanted 
2018-10-14T17:44:10Z			thanks you did commit all your idea file though see herehttpshelpgithubcomarticlesignoringfilescreateaglobalgitignore on how to create a global git ignore file and add idea to it then we can walk through how to squash your history for those files to not be added to repo if you code work on python 37 at the repl you should see the followingin 1 import warnings    def foo        warningswarnoh noooo deprecationwarning   in 2 foousersbussonniermatthiasanacondabinipython3 deprecationwarning oh noooo  __requires__  ipython 
2018-10-14T17:46:03Z			good job and thanks eamanu for the review  
2018-10-14T18:02:27Z			feel free to ask if you want more guidance ill stay short on purpose  to gitve you the opportunity to figure it out by yourself   but i can give you detailed instructions if needed 
2018-10-14T20:38:15Z			its good let me show you how to rewrite the history to have only one clean commit and not have the intermediate idea files in historywell rebase interactive i and squash s the last two commits git rebase i head3vim open if you havent set editorpress i and edit the second and third line replace pick by spress esc  w q enter write your new commit messagenow you can force push here is it as a gifrebase examplehttpsuserimagesgithubusercontentcom33556746921876c1aa6500cfb511e899df0055bcb83b03gifif its too complicated i can do that for you  
2018-10-14T23:43:48Z			 what are the next steps now should we do some more testingno more step for this issue that you for this specific issue i dont think more testing is necessary ill just update 11333 so that once we drop 36 the code can actually be removed but that will take a couple of years good job 
2018-10-15T00:32:48Z			 do you have any suggestionsnot particularly ill have to go through and figure out if issues are easy or hard you can try to go through the list of what is needed for 71 releasehttpsgithubcomipythonipythonmilestone59 some of them have been fixed and just need to be closed you should be able to also apply a subset of labels to issueshttpsgithubcomipythonipythonblobmastermeeseeksdevymll11l17 by gently asking our bot like so meeseeksdev tag hacktoberfestill try to mark a few issue as good first issue andor help wanted 
2018-10-13T22:42:47Z			in general we try to avoid cleaning up for the sake of cleaning up it has many disadvantages   it often prevent from backporting patches as now there are conflicts   it screw up git blame and git bisect to find the root cause of a bug or the reason for change   it often may look like the same code but there may be some subtle behavior changes that are hard to track down especially since that both do some purely stylistic change and some code refactor im a bit worried there is also some stylistic changes that are both incoherent with the rest of the codebase and against pep8 but we only partially follow thatill try to review the code inline  
2018-10-13T22:57:08Z			this mostly looks good but as i said above we try to avoid stylistic fixes for the sake of stylistic fixes and try to get changes separately as otherwise you have these tiny semantic issues that crop up and make increase the risk of introducing a bug  
2018-10-13T22:42:47Z			in general we try to avoid cleaning up for the sake of cleaning up it has many disadvantages   it often prevent from backporting patches as now there are conflicts   it screw up git blame and git bisect to find the root cause of a bug or the reason for change   it often may look like the same code but there may be some subtle behavior changes that are hard to track down especially since that both do some purely stylistic change and some code refactor im a bit worried there is also some stylistic changes that are both incoherent with the rest of the codebase and against pep8 but we only partially follow thatill try to review the code inline  
2018-10-13T22:57:08Z			this mostly looks good but as i said above we try to avoid stylistic fixes for the sake of stylistic fixes and try to get changes separately as otherwise you have these tiny semantic issues that crop up and make increase the risk of introducing a bug  
2018-10-13T00:12:34Z			meeseeksdevbot tag hacktoberfest 
2018-10-13T00:12:34Z			meeseeksdevbot tag hacktoberfest 
2018-10-13T16:12:31Z			thanks  that looks good  
2018-10-13T16:12:31Z			thanks  that looks good  
2018-10-12T16:41:04Z			thanks  
2018-10-12T16:41:04Z			thanks  
2018-10-09T22:10:32Z			running test is a bit weird as we are a python shell you need to not be in ipython directory and run iptestto run a single test i would for example run  cd  iptest ipythoncoreteststest_inputtransformer2test_check_complete cd you can also just push on the branch and let travis ci work for you   
2018-10-09T22:10:32Z			running test is a bit weird as we are a python shell you need to not be in ipython directory and run iptestto run a single test i would for example run  cd  iptest ipythoncoreteststest_inputtransformer2test_check_complete cd you can also just push on the branch and let travis ci work for you   
2018-10-09T22:19:51Z			hum the think in 11329 is a hacks and you shouldn recall initptkappyou most likely want to dynamically set ippt_appediting_mode via a magic that does the right checks andor add listeners to ipediting_mode that propagate the value to ippt_appediting_mode 
2018-10-10T15:26:47Z			ippt_app you are missing the pt_app 
2018-10-13T00:07:54Z			i think that something like 11390 would be better suited to avoid having to poke at internalsthen you just have to ipediting_mode to switch or use config terminalinteractiveshellediting_mode  vi which now works and prepend insnav to the prompt we just dont have that many vim user so of course we dont fix bugs  
2018-10-13T15:52:40Z			please reread the rest of the comments and 11390i does work here locally if you update the right attributes of the right class instance you should not call init_prompt_toolkit_cli many time that will make internal ipython state inconsistent 
2018-10-14T21:48:36Z			closing fixed by 11390 feel free to ask if this need to be reopened 
2018-10-09T22:19:51Z			hum the think in 11329 is a hacks and you shouldn recall initptkappyou most likely want to dynamically set ippt_appediting_mode via a magic that does the right checks andor add listeners to ipediting_mode that propagate the value to ippt_appediting_mode 
2018-10-10T15:26:47Z			ippt_app you are missing the pt_app 
2018-10-13T00:07:54Z			i think that something like 11390 would be better suited to avoid having to poke at internalsthen you just have to ipediting_mode to switch or use config terminalinteractiveshellediting_mode  vi which now works and prepend insnav to the prompt we just dont have that many vim user so of course we dont fix bugs  
2018-10-13T15:52:40Z			please reread the rest of the comments and 11390i does work here locally if you update the right attributes of the right class instance you should not call init_prompt_toolkit_cli many time that will make internal ipython state inconsistent 
2018-10-14T21:48:36Z			closing fixed by 11390 feel free to ask if this need to be reopened 
2018-10-13T16:00:46Z			i think thats good thanks  
2018-10-13T16:00:46Z			i think thats good thanks  
2018-10-08T15:14:16Z			oh thanks  
2018-10-08T15:14:16Z			oh thanks  
2018-10-12T16:40:27Z			lgtmgood work 
2018-10-12T16:40:27Z			lgtmgood work 
2018-10-12T23:13:12Z			not all your machines are setup with the same email andor github does not have all your emails so some commits do not appear as yours i believe 35 have function signature types so these would have been ok to leave in i think there is 2 small leftover 1 debug statement and 1 comment and were good to merge imho  
2018-10-12T23:13:36Z			meeseeksdev tag hacktoberfest 
2018-10-13T15:54:09Z			thanks 
2018-10-12T23:13:12Z			not all your machines are setup with the same email andor github does not have all your emails so some commits do not appear as yours i believe 35 have function signature types so these would have been ok to leave in i think there is 2 small leftover 1 debug statement and 1 comment and were good to merge imho  
2018-10-12T23:13:36Z			meeseeksdev tag hacktoberfest 
2018-10-13T15:54:09Z			thanks 
2018-10-13T16:06:12Z			that looks good to me 
2018-10-13T16:06:12Z			that looks good to me 
2018-10-04T02:46:55Z			 anyone have any ideas why this may be passing on everything but python 37devmaybe a change of api in generate_token or similar on pyhton 37 dev 
2018-10-04T02:59:13Z			thats httpsbugspythonorgissue33899 
2018-10-04T03:26:13Z			 36in 8 listgenerate_tokensitera  1__next__out8tokeninfotype1 name stringa start1 0 end1 1 linea tokeninfotype0 endmarker string start2 0 end2 0 lineafaict we need need to add a n newline before endmarker 
2018-10-04T14:20:10Z			likely yes that would be good unless it make the tests take too long inhigh case we can test only on one devon thu oct 4 2018 0629 tony fast notificationsgithubcom wrote the cpython changes to tokenize effect 36  37 the ipython tests are not checking on python36dev should there be tests for 36dev because of this use case  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11358issuecomment427018524 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez7xelldvbrk8nz01tjkxwkjuh2x1ks5uhg1igajpzm4xhpxz  
2018-10-06T17:42:31Z			thanks  awesome work tonyfast ill try to review and merced this weekend 
2018-10-08T15:13:31Z			thanks all lets try to get that in and have an ipython 71 by end of weekthat should match the imminent release of python 371 that have the compatibility issues mentioned earlier  
2018-10-04T02:46:55Z			 anyone have any ideas why this may be passing on everything but python 37devmaybe a change of api in generate_token or similar on pyhton 37 dev 
2018-10-04T02:59:13Z			thats httpsbugspythonorgissue33899 
2018-10-04T03:26:13Z			 36in 8 listgenerate_tokensitera  1__next__out8tokeninfotype1 name stringa start1 0 end1 1 linea tokeninfotype0 endmarker string start2 0 end2 0 lineafaict we need need to add a n newline before endmarker 
2018-10-04T14:20:10Z			likely yes that would be good unless it make the tests take too long inhigh case we can test only on one devon thu oct 4 2018 0629 tony fast notificationsgithubcom wrote the cpython changes to tokenize effect 36  37 the ipython tests are not checking on python36dev should there be tests for 36dev because of this use case  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11358issuecomment427018524 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez7xelldvbrk8nz01tjkxwkjuh2x1ks5uhg1igajpzm4xhpxz  
2018-10-06T17:42:31Z			thanks  awesome work tonyfast ill try to review and merced this weekend 
2018-10-08T15:13:31Z			thanks all lets try to get that in and have an ipython 71 by end of weekthat should match the imminent release of python 371 that have the compatibility issues mentioned earlier  
2018-10-12T23:07:02Z			i do not have any objection if there is no objection from the nbconvertnotebooklab side of things im happy to get that in 
2018-10-12T23:07:02Z			i do not have any objection if there is no objection from the nbconvertnotebooklab side of things im happy to get that in 
2018-10-02T17:36:42Z			any chance you can add a test  and you of course registered for hacktoberfesthttpshacktoberfestdigitaloceancom   
2018-10-02T17:42:44Z			meeseeksdev tag hacktoberfest 
2018-10-03T17:09:28Z			thanks  getting that in  
2018-10-02T17:36:42Z			any chance you can add a test  and you of course registered for hacktoberfesthttpshacktoberfestdigitaloceancom   
2018-10-02T17:42:44Z			meeseeksdev tag hacktoberfest 
2018-10-03T17:09:28Z			thanks  getting that in  
2018-10-03T15:51:39Z			apologies i just merged 11353 that fixes the same issue there are still improvements possible like letting users pass string like 12 11pt do you want to attempt this   
2018-10-03T15:51:39Z			apologies i just merged 11353 that fixes the same issue there are still improvements possible like letting users pass string like 12 11pt do you want to attempt this   
2018-10-01T23:26:59Z			that seem incorrect now a  1 is considered as incomplete while its not 
2018-10-03T17:28:59Z			there seem to be some more edge casesif true    1no spaces appear as incomplete and adds a new line with 4 spaces if true    1	4 spaces appear as complete an executes 
2018-10-03T23:24:56Z			 interactiveshellcheck_complete invokes transfermanagercheck_complete and seems the passing code argument doesnt have a trailing n in any situation i believe this is for some reasons and is correct carreau takluyver wrote most of this  ps carreau is there any guide how to develop and test locally ipython when i want to use ipython installed globally to meet all requirements etc i have no access to the ipythondev directory as all imports are already done for starting ipython itself i can figure it out how to do this but maybe there is a note about it somewhereclone the repo and run pip install e  that should make a dev install that reflect modification to the source code i use  cd  iptest ipythoncoreteststest_inputtransformer2test_check_complete cd  to run a single test and be sure not to be in ipython source tree when running the test httpsgithubcomipythonipythondevelopmentandinstantrunning is basically links to longer versions than this if i have time outside of dayjob ill try have a look but takluyver is the expert and tonyfast sent a pr to fix another bug recently so may have some insights  
2018-10-01T23:26:59Z			that seem incorrect now a  1 is considered as incomplete while its not 
2018-10-03T17:28:59Z			there seem to be some more edge casesif true    1no spaces appear as incomplete and adds a new line with 4 spaces if true    1	4 spaces appear as complete an executes 
2018-10-03T23:24:56Z			 interactiveshellcheck_complete invokes transfermanagercheck_complete and seems the passing code argument doesnt have a trailing n in any situation i believe this is for some reasons and is correct carreau takluyver wrote most of this  ps carreau is there any guide how to develop and test locally ipython when i want to use ipython installed globally to meet all requirements etc i have no access to the ipythondev directory as all imports are already done for starting ipython itself i can figure it out how to do this but maybe there is a note about it somewhereclone the repo and run pip install e  that should make a dev install that reflect modification to the source code i use  cd  iptest ipythoncoreteststest_inputtransformer2test_check_complete cd  to run a single test and be sure not to be in ipython source tree when running the test httpsgithubcomipythonipythondevelopmentandinstantrunning is basically links to longer versions than this if i have time outside of dayjob ill try have a look but takluyver is the expert and tonyfast sent a pr to fix another bug recently so may have some insights  
2018-10-03T15:48:31Z			looks good  as an improvement you could try to see how to let users pass strings like 40 12em but thats a good first step  
2018-10-03T15:48:31Z			looks good  as an improvement you could try to see how to let users pass strings like 40 12em but thats a good first step  
2018-10-02T17:43:32Z			looks good to me meeseeksdevbot tag hacktoberfest meeseeksdevbotmerge 
2018-10-02T17:43:32Z			looks good to me meeseeksdevbot tag hacktoberfest meeseeksdevbotmerge 
2018-10-03T15:43:43Z			looks good to me thanks  
2018-10-03T15:43:43Z			looks good to me thanks  
2018-10-03T15:46:59Z			thanks  
2018-10-03T15:46:59Z			thanks  
2018-10-13T15:48:57Z			 keep in mind that this could break the input hooks for ui toolkits which ipython has right now did you test thatno i did not test and this likely also bypass the pre and post execute hooksthis was mostly an experiment to see how much change was needed and think about what internal api to deprecate as we just released 70 i doubt i want to merge this in the 7x branch 
2018-10-13T15:48:57Z			 keep in mind that this could break the input hooks for ui toolkits which ipython has right now did you test thatno i did not test and this likely also bypass the pre and post execute hooksthis was mostly an experiment to see how much change was needed and think about what internal api to deprecate as we just released 70 i doubt i want to merge this in the 7x branch 
2018-09-29T01:50:46Z			looks good to me meeseeksdev tag documentationmeeseeksdev merge 
2018-09-29T01:50:46Z			looks good to me meeseeksdev tag documentationmeeseeksdev merge 
2018-10-13T22:27:37Z			thanks that looks good to me as well merging  
2018-10-13T22:27:37Z			thanks that looks good to me as well merging  
2018-09-21T17:58:19Z			i really need to have meeseeks trigger only when its name is at thebeginning of the lineon fri sep 21 2018 1928 carol willing notificationsgithubcom wrote willingc approved this pull request  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11326pullrequestreview157786731 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez3lwc0dbbv61cmxzsb7obvtxetfqks5udsgmgajpzm4wzmzm  
2018-09-21T18:07:50Z			yes user wo commit right can just mention the bot like you did it willonly apply existing labelsi believe if the user does not have the permission it tells that to theuserif someone abuse the bot we can ban them from using the botone question which i believe we can tackle later is traceability ifsomeone mention the bot and delete their comment we cant know whotriggered it without diving through the bot logs 
2018-09-23T14:46:23Z			 i absolutely think that triaging issues labels and even recommending closing with signoff by another person would be welcomehaving signoff by or multiple 1 to close may not be super easy ill think about how to do itive push some info in contributingmd on how to use the bot 
2018-09-26T21:27:58Z			thanks willingc  i took your suggestions into account  
2018-09-27T17:26:17Z			ok im going to merge and point to that as part of the ipython 70 release announce  
2018-09-27T17:27:05Z			thanks all meeseeksdevbot say oweee looking forward to help  
2018-09-21T17:58:19Z			i really need to have meeseeks trigger only when its name is at thebeginning of the lineon fri sep 21 2018 1928 carol willing notificationsgithubcom wrote willingc approved this pull request  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11326pullrequestreview157786731 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez3lwc0dbbv61cmxzsb7obvtxetfqks5udsgmgajpzm4wzmzm  
2018-09-21T18:07:50Z			yes user wo commit right can just mention the bot like you did it willonly apply existing labelsi believe if the user does not have the permission it tells that to theuserif someone abuse the bot we can ban them from using the botone question which i believe we can tackle later is traceability ifsomeone mention the bot and delete their comment we cant know whotriggered it without diving through the bot logs 
2018-09-23T14:46:23Z			 i absolutely think that triaging issues labels and even recommending closing with signoff by another person would be welcomehaving signoff by or multiple 1 to close may not be super easy ill think about how to do itive push some info in contributingmd on how to use the bot 
2018-09-26T21:27:58Z			thanks willingc  i took your suggestions into account  
2018-09-27T17:26:17Z			ok im going to merge and point to that as part of the ipython 70 release announce  
2018-09-27T17:27:05Z			thanks all meeseeksdevbot say oweee looking forward to help  
2018-09-19T11:52:27Z			many thanks  
2018-09-19T11:52:27Z			many thanks  
2018-09-19T07:24:24Z			yes and potentially also making the default to import nothing includingbumpy and move that to an option somewherecongrats on 30on wed sep 19 2018 0222 thomas a caswell notificationsgithubcomwrote if i understand this the new default is to try to import matplotlib and if it fails just keep going without plt if so   you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11321issuecomment422603000 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez8ay96nh4mksppmzrsc3juv2ybks5ucy47gajpzm4wtuxs  
2018-09-19T11:50:18Z			im not going to change this for 70 but i think okexcept should raise if there is no exceptions 
2018-09-19T07:24:24Z			yes and potentially also making the default to import nothing includingbumpy and move that to an option somewherecongrats on 30on wed sep 19 2018 0222 thomas a caswell notificationsgithubcomwrote if i understand this the new default is to try to import matplotlib and if it fails just keep going without plt if so   you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11321issuecomment422603000 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez8ay96nh4mksppmzrsc3juv2ybks5ucy47gajpzm4wtuxs  
2018-09-19T11:50:18Z			im not going to change this for 70 but i think okexcept should raise if there is no exceptions 
2018-09-16T16:02:19Z			thanks looks simple enough 
2018-10-11T20:02:48Z			 just to check whats the recommended way to use this as a developer of a package is there a way to enable dict_keys_onlytrue for specific classes by default or is this just settable on a userlevel in ipythonthis is only global at ipython level  i am way overdue to write a whitepaper and request funding to push jedi forward and make ipython tab completion on par with what other ide have i  can involve you if you want to help with that  
2018-09-16T16:02:19Z			thanks looks simple enough 
2018-10-11T20:02:48Z			 just to check whats the recommended way to use this as a developer of a package is there a way to enable dict_keys_onlytrue for specific classes by default or is this just settable on a userlevel in ipythonthis is only global at ipython level  i am way overdue to write a whitepaper and request funding to push jedi forward and make ipython tab completion on par with what other ide have i  can involve you if you want to help with that  
2018-09-13T08:30:57Z			one of the things we can do is put the how to upgrade betas in a  only ipydev directive so it will only display while building the latest documentation best of both world   
2018-09-15T07:54:53Z			thanks  looks great  
2018-09-13T08:30:57Z			one of the things we can do is put the how to upgrade betas in a  only ipydev directive so it will only display while building the latest documentation best of both world   
2018-09-15T07:54:53Z			thanks  looks great  
2018-09-13T08:28:23Z			 et me know if you prefer i just push to the branch to fix em myself instead of reviewing them inlineup to you the easiest for you if you review on your local vim feel free to make changes if you prefer gh ui then i can do it i should have fixed all comments thanks  
2018-09-13T08:28:23Z			 et me know if you prefer i just push to the branch to fix em myself instead of reviewing them inlineup to you the easiest for you if you review on your local vim feel free to make changes if you prefer gh ui then i can do it i should have fixed all comments thanks  
2018-09-12T10:21:59Z			that is awesome thanks  do you have a link of where you find this informations   
2018-09-12T10:21:59Z			that is awesome thanks  do you have a link of where you find this informations   
2018-09-14T08:49:59Z			 not 70sure we can but not critical 
2018-09-14T08:49:59Z			 not 70sure we can but not critical 
2018-09-11T15:59:30Z			 not milestone 70if ivanov is comfortable with it sure but the less modif between betarcfinal the better no  
2018-09-11T15:59:30Z			 not milestone 70if ivanov is comfortable with it sure but the less modif between betarcfinal the better no  
2018-09-07T12:33:43Z			ivanov this simplify a bit and prepare the release process you expressed interest in trying it let me know 
2018-09-10T13:34:46Z			typos fixed and a couple of others as well 
2018-09-11T07:25:40Z			 did i goof something up or do the docs need to be updatedi updated the instructioncode a couple of days ago confpy already detect stabledevhttpsgithubcomipythonipythonblamemasterdocssourceconfpyl82l93 we used to remove the develpement entry by hand but now it _should_ be automatic httpsgithubcomipythonipythonblamemasterdocssourcewhatsnewindexrstl18l37 i see you saw the codei see i missed something in build_releasehttpsgithubcomipythonipythoncommit2a62b70caecaac834be8b02149f6dd985b73d76c but you found it i guess we can remove this check nowthanks for going through the release process is beta 1 out now   
2018-09-07T12:33:43Z			ivanov this simplify a bit and prepare the release process you expressed interest in trying it let me know 
2018-09-10T13:34:46Z			typos fixed and a couple of others as well 
2018-09-11T07:25:40Z			 did i goof something up or do the docs need to be updatedi updated the instructioncode a couple of days ago confpy already detect stabledevhttpsgithubcomipythonipythonblamemasterdocssourceconfpyl82l93 we used to remove the develpement entry by hand but now it _should_ be automatic httpsgithubcomipythonipythonblamemasterdocssourcewhatsnewindexrstl18l37 i see you saw the codei see i missed something in build_releasehttpsgithubcomipythonipythoncommit2a62b70caecaac834be8b02149f6dd985b73d76c but you found it i guess we can remove this check nowthanks for going through the release process is beta 1 out now   
2018-09-07T13:09:52Z			yep seem like a better solution than current yield thingi guess there is likely some extra refactor we can do as we seem to apply the transformers and check for async both in run_cell_async and should_run_async which tend to show there is likely a better abstraction but im happy to move forward with this 
2018-09-07T13:35:45Z			 i think the long term fix is to get to the point where its always async and we dont need to check so im happy with this as the current stateok lets get that in hopefully at some point well have asyncexec in core python   
2018-09-07T13:09:52Z			yep seem like a better solution than current yield thingi guess there is likely some extra refactor we can do as we seem to apply the transformers and check for async both in run_cell_async and should_run_async which tend to show there is likely a better abstraction but im happy to move forward with this 
2018-09-07T13:35:45Z			 i think the long term fix is to get to the point where its always async and we dont need to check so im happy with this as the current stateok lets get that in hopefully at some point well have asyncexec in core python   
2018-09-07T10:48:15Z			seem reasonable to methanks  
2018-09-07T10:48:15Z			seem reasonable to methanks  
2018-09-06T18:20:49Z			cc mseal  
2018-09-07T15:04:10Z			thanks on fri sep 7 2018 1635 min rk notificationsgithubcom wrote merged 11287 httpsgithubcomipythonipythonpull11287 into master  you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11287event1833009513 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauezzvqjktk_e8zyhm5tafd0c6yafnxks5uyoqhgajpzm4wddh4  
2018-09-06T18:20:49Z			cc mseal  
2018-09-07T15:04:10Z			thanks on fri sep 7 2018 1635 min rk notificationsgithubcom wrote merged 11287 httpsgithubcomipythonipythonpull11287 into master  you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11287event1833009513 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauezzvqjktk_e8zyhm5tafd0c6yafnxks5uyoqhgajpzm4wddh4  
2018-09-06T09:48:22Z			lets see if we can find how to fold your test case into the test suite  
2018-09-06T10:18:57Z			ive tried adding some tests let me know if thats what you were looking fori havent asserted the values of ca cb ctoto and i am jetlagged so may have done stupid things  
2018-09-06T10:20:49Z			you may want to add a file in docssourcewhatsnewpr with whats new  
2018-09-06T19:56:51Z			 the tests look fine to me thank you i would not have been able to write themits ok they were not easy to write testing this in one of the tricky bits  if you think the whatsnewprimproveautoreloadmd is too verbose feel free to cullall the watsnewpr will be merged in the changelog at release time and well be edited then 
2018-09-06T09:48:22Z			lets see if we can find how to fold your test case into the test suite  
2018-09-06T10:18:57Z			ive tried adding some tests let me know if thats what you were looking fori havent asserted the values of ca cb ctoto and i am jetlagged so may have done stupid things  
2018-09-06T10:20:49Z			you may want to add a file in docssourcewhatsnewpr with whats new  
2018-09-06T19:56:51Z			 the tests look fine to me thank you i would not have been able to write themits ok they were not easy to write testing this in one of the tricky bits  if you think the whatsnewprimproveautoreloadmd is too verbose feel free to cullall the watsnewpr will be merged in the changelog at release time and well be edited then 
2018-09-05T07:52:05Z			thanks  
2018-09-05T07:52:05Z			thanks  
2018-09-01T01:31:08Z			i dont like this but im going to selfmerge im going to try to use the bot to do that out of shamemeeseeksdev merge 
2018-09-01T01:31:08Z			i dont like this but im going to selfmerge im going to try to use the bot to do that out of shamemeeseeksdev merge 
2018-08-28T00:47:32Z			 i separated out the whitespace fixes ba6166e in case there was resistance to merge themthanks  much appreciated i think there are few enough that this is okmerging away  
2018-08-28T00:47:32Z			 i separated out the whitespace fixes ba6166e in case there was resistance to merge themthanks  much appreciated i think there are few enough that this is okmerging away  
2018-09-01T17:20:14Z			sorry we missed the pullrequest i will have a look marking as 70 to make sure to have a look at it  
2018-09-01T17:24:54Z			i believe most of the debugger test are in ipythoncoreteststest_debuggerpy are doctests and ran through a subprocess not 10 sure about that though  
2018-09-01T17:43:30Z			ok i was wrong for above the only way i can see is to use subprocess and run python i and check the output something similar to ipythonterminalteststest_embedpyhttpsgithubcomipythonipythonbloba85a08ccc63726c1a2ee8bde8fa05a3cb2955dd9ipythonterminalteststest_embedpyill see if i can write a scaffold for that 
2018-09-10T13:13:49Z			ok im writing some test but this seem to not be _quite_ rightin 1 def fx        raise exceptionin 2 gen  fx for x in 0in 3 for x in gen        passexception                                 traceback most recent call lastipythoninput35b2155f9c4b2 in module 1 for x in gen      2     passipythoninput2b7f6c0ea3068 in genexpr0 1 gen  fx for x in 0ipythoninput1a13efb0dffe1 in fx      1 def fx 2     raise exceptionexceptionin 4 debug ipythoninput1a13efb0dffe12f      1 def fx 2     raise exceptionipdb u ipythoninput2b7f6c0ea30681genexpr 1 gen  fx for x in 0ipdb u ipythoninput35b2155f9c4b21module 1 for x in gen      2     passipdb u                                          ipythoninput1a13efb0dffe12f                1 def fx                                2     raise exception                      these two frames are wrong                                                ipdb u                                          ipythoninput2b7f6c0ea30681genexpr   1 gen  fx for x in 0                                                               ipdb u oldest frameit show frames in the wrong place or rego through frames it should notim going to try to polish the tests framework to test that and we can figure out what to do im going to likely push this thing for 71 
2018-09-19T09:13:46Z			thanks ill have a look thy to commit a test framework or at least a draft of it  
2018-10-12T23:02:49Z			ok i just pushed what should be test for this patch its a bit cumbersome to write as you will see but lets not optimize until we actually have need to write this often  
2018-10-12T23:03:52Z			once test passes ill merge many thanks for your patience meeseeksdevbot untag help wantedmeeseeksdevbot tag hacktoberfest 
2018-10-13T15:57:08Z			tests are passing lets get that in many thanks  
2018-09-01T17:20:14Z			sorry we missed the pullrequest i will have a look marking as 70 to make sure to have a look at it  
2018-09-01T17:24:54Z			i believe most of the debugger test are in ipythoncoreteststest_debuggerpy are doctests and ran through a subprocess not 10 sure about that though  
2018-09-01T17:43:30Z			ok i was wrong for above the only way i can see is to use subprocess and run python i and check the output something similar to ipythonterminalteststest_embedpyhttpsgithubcomipythonipythonbloba85a08ccc63726c1a2ee8bde8fa05a3cb2955dd9ipythonterminalteststest_embedpyill see if i can write a scaffold for that 
2018-09-10T13:13:49Z			ok im writing some test but this seem to not be _quite_ rightin 1 def fx        raise exceptionin 2 gen  fx for x in 0in 3 for x in gen        passexception                                 traceback most recent call lastipythoninput35b2155f9c4b2 in module 1 for x in gen      2     passipythoninput2b7f6c0ea3068 in genexpr0 1 gen  fx for x in 0ipythoninput1a13efb0dffe1 in fx      1 def fx 2     raise exceptionexceptionin 4 debug ipythoninput1a13efb0dffe12f      1 def fx 2     raise exceptionipdb u ipythoninput2b7f6c0ea30681genexpr 1 gen  fx for x in 0ipdb u ipythoninput35b2155f9c4b21module 1 for x in gen      2     passipdb u                                          ipythoninput1a13efb0dffe12f                1 def fx                                2     raise exception                      these two frames are wrong                                                ipdb u                                          ipythoninput2b7f6c0ea30681genexpr   1 gen  fx for x in 0                                                               ipdb u oldest frameit show frames in the wrong place or rego through frames it should notim going to try to polish the tests framework to test that and we can figure out what to do im going to likely push this thing for 71 
2018-09-19T09:13:46Z			thanks ill have a look thy to commit a test framework or at least a draft of it  
2018-10-12T23:02:49Z			ok i just pushed what should be test for this patch its a bit cumbersome to write as you will see but lets not optimize until we actually have need to write this often  
2018-10-12T23:03:52Z			once test passes ill merge many thanks for your patience meeseeksdevbot untag help wantedmeeseeksdevbot tag hacktoberfest 
2018-10-13T15:57:08Z			tests are passing lets get that in many thanks  
2018-08-14T19:02:26Z			im thinking of dropping 34 as maintaining compat with it will be painful there are no specific plans for the next release of python 34 however the expectation is that python 3410 will be released in march of 2019 and this will be the final release of python 34well also be supporting 35 36 and 37minrk  and takluyver thoughts   
2018-08-21T18:09:14Z			i have to better understand the implication it is likely possible though it will likely work only on terminal ipython it might also not stay forever as in the end i want ipython to always run on an event loop though i guess we could run only on the pseudosync or a nonasyncio one once that hapend we can figure out how to patch run in order to patch run_until_complete 
2018-08-22T15:03:22Z			 i forgot about prompttoolkityep that was one of my main concern but we can see once were there seeing that it took us 2 years between prototype and now maybe by then code python will have a better solution for asyncexec and multiple loops  
2018-08-25T18:09:16Z			dalejung  ive added your commit to this pull request it does fix pganssle use case as well as paste and cpaste were internally running run_cell which was thus nested  
2018-08-27T17:21:37Z			thanks  much appreciated  
2018-08-28T01:20:06Z			that would close 9166 as well 
2018-08-28T19:19:35Z			todo catch exception when the runner crash eg when using autoawait trio and then await asynciosleep0edit now done 
2018-08-31T18:57:39Z			timeit time and prun magics will need updates to work with async code they still work for sync code though so i dont think it is a blocker  
2018-09-04T15:03:58Z			thats right you need to do a small dance i believe i have a patch on mymachine for ipykernel to make this workyou need to advance the coro by sending none to it once we could do it inanother way but at some point well always hit the fact that python doesnot have a real asyncexec and that we need to distinguish 2 path ofrunning sync code or asyc oneon tue sep 4 2018 1643 min rk notificationsgithubcom wrote minrk commented on this pull request  in ipythoncoreinteractiveshellpy httpsgithubcomipythonipythonpull11265discussion_r214942959   27809 298414  def error_before_execvalue                  selfdisplayhookexec_result  result                   execute the user code                 interactivity  none if silent else selfast_node_interactivity                 has_raised  selfrun_ast_nodescode_astbody cell_name                    interactivityinteractivity compilercompiler resultresult                 interactivity  none if silent else selfast_node_interactivity                 if _run_async                     interactivity  async                  yield interactivity so let run_cell decide whether to use                  an async loop_runner                 yield interactivity adding yield interactivity here makes this a notentirelyvalid coroutine doesnt it when i try to call await run_cell_async from ipykernel i get a bad yield last_expr how can we communicate this required info without faking that this isnt actually a coroutine does it need to be an actual async generator  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11265pullrequestreview152101058 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez6l5irzuy9qngmdamhryjsfea77ks5uxpgxgajpzm4v7qox  
2018-09-07T11:13:28Z			ok seem like weve reached quasi static state and most of the latest updates were documentation plus ipykernel works with that so im going to merge thanks all involved  and we can refine if necessary 
2018-08-14T19:02:26Z			im thinking of dropping 34 as maintaining compat with it will be painful there are no specific plans for the next release of python 34 however the expectation is that python 3410 will be released in march of 2019 and this will be the final release of python 34well also be supporting 35 36 and 37minrk  and takluyver thoughts   
2018-08-21T18:09:14Z			i have to better understand the implication it is likely possible though it will likely work only on terminal ipython it might also not stay forever as in the end i want ipython to always run on an event loop though i guess we could run only on the pseudosync or a nonasyncio one once that hapend we can figure out how to patch run in order to patch run_until_complete 
2018-08-22T15:03:22Z			 i forgot about prompttoolkityep that was one of my main concern but we can see once were there seeing that it took us 2 years between prototype and now maybe by then code python will have a better solution for asyncexec and multiple loops  
2018-08-25T18:09:16Z			dalejung  ive added your commit to this pull request it does fix pganssle use case as well as paste and cpaste were internally running run_cell which was thus nested  
2018-08-27T17:21:37Z			thanks  much appreciated  
2018-08-28T01:20:06Z			that would close 9166 as well 
2018-08-28T19:19:35Z			todo catch exception when the runner crash eg when using autoawait trio and then await asynciosleep0edit now done 
2018-08-31T18:57:39Z			timeit time and prun magics will need updates to work with async code they still work for sync code though so i dont think it is a blocker  
2018-09-04T15:03:58Z			thats right you need to do a small dance i believe i have a patch on mymachine for ipykernel to make this workyou need to advance the coro by sending none to it once we could do it inanother way but at some point well always hit the fact that python doesnot have a real asyncexec and that we need to distinguish 2 path ofrunning sync code or asyc oneon tue sep 4 2018 1643 min rk notificationsgithubcom wrote minrk commented on this pull request  in ipythoncoreinteractiveshellpy httpsgithubcomipythonipythonpull11265discussion_r214942959   27809 298414  def error_before_execvalue                  selfdisplayhookexec_result  result                   execute the user code                 interactivity  none if silent else selfast_node_interactivity                 has_raised  selfrun_ast_nodescode_astbody cell_name                    interactivityinteractivity compilercompiler resultresult                 interactivity  none if silent else selfast_node_interactivity                 if _run_async                     interactivity  async                  yield interactivity so let run_cell decide whether to use                  an async loop_runner                 yield interactivity adding yield interactivity here makes this a notentirelyvalid coroutine doesnt it when i try to call await run_cell_async from ipykernel i get a bad yield last_expr how can we communicate this required info without faking that this isnt actually a coroutine does it need to be an actual async generator  you are receiving this because you were mentioned reply to this email directly view it on github httpsgithubcomipythonipythonpull11265pullrequestreview152101058 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez6l5irzuy9qngmdamhryjsfea77ks5uxpgxgajpzm4v7qox  
2018-09-07T11:13:28Z			ok seem like weve reached quasi static state and most of the latest updates were documentation plus ipykernel works with that so im going to merge thanks all involved  and we can refine if necessary 
2018-08-06T15:44:06Z			 he original code in modules_pathpy indicates that we want to ignore bytecode return full path of module or none if module is missing or does not have py or pyw extension we are not interested in running bytecode however there was an existing unit test that explicitly checked that pyc filepaths were returned rather than returning none is it correct to assume that we want to ignore filepaths that lead to pyc files this assumption has been made in this pri believe ignoring pyc is the right thing this appear to be use in deepreload and run which you likely want to run on modified py  files so that seem the right call it also seem to be used _only_ there so at some point we may want to move that somewhere else awesome work that looks good to me so merging and well see if we get complaints   
2018-08-06T15:44:06Z			 he original code in modules_pathpy indicates that we want to ignore bytecode return full path of module or none if module is missing or does not have py or pyw extension we are not interested in running bytecode however there was an existing unit test that explicitly checked that pyc filepaths were returned rather than returning none is it correct to assume that we want to ignore filepaths that lead to pyc files this assumption has been made in this pri believe ignoring pyc is the right thing this appear to be use in deepreload and run which you likely want to run on modified py  files so that seem the right call it also seem to be used _only_ there so at some point we may want to move that somewhere else awesome work that looks good to me so merging and well see if we get complaints   
2018-08-04T21:59:45Z			thanks if you use pyenv it would be preferable to set up a global gitignorehttpshelpgithubcomarticlesignoringfilescreateaglobalgitignore as using pyenv is a decision you make and not one ipython did still merging this at it will be of help for other but setting up your global gitignore is usually a good idea 
2018-08-04T21:59:45Z			thanks if you use pyenv it would be preferable to set up a global gitignorehttpshelpgithubcomarticlesignoringfilescreateaglobalgitignore as using pyenv is a decision you make and not one ipython did still merging this at it will be of help for other but setting up your global gitignore is usually a good idea 
2018-08-04T22:00:51Z			awesome thanks  
2018-08-04T22:00:51Z			awesome thanks  
2018-08-04T22:03:12Z			oops good catch  and good job tracking things down 
2018-08-04T22:03:12Z			oops good catch  and good job tracking things down 
2018-08-16T14:59:16Z			thanks on thu aug 16 2018 0649 min rk notificationsgithubcom wrote merged 11250 httpsgithubcomipythonipythonpull11250 into master  you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11250event1792429439 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauezwtlyeb05teuh_ul5xh9si2a3cejks5urxhagajpzm4vtlr7  
2018-08-16T14:59:16Z			thanks on thu aug 16 2018 0649 min rk notificationsgithubcom wrote merged 11250 httpsgithubcomipythonipythonpull11250 into master  you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11250event1792429439 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauezwtlyeb05teuh_ul5xh9si2a3cejks5urxhagajpzm4vtlr7  
2018-07-29T15:42:31Z			no 65 is just a bugfix ptk 20 would be major api changeon sun jul 29 2018 0434 stonebig notificationsgithubcom wrote so no 11177 httpsgithubcomipythonipythonpull11177 backport   you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11243issuecomment408670227 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez7xszk2eypi403xcjyijqzaf90glks5ulz3rgajpzm4vln3_  
2018-07-29T17:25:27Z			note pushed this and whats new in 5x to the 6x branch already  
2018-07-29T17:29:58Z			fixed   
2018-07-29T15:42:31Z			no 65 is just a bugfix ptk 20 would be major api changeon sun jul 29 2018 0434 stonebig notificationsgithubcom wrote so no 11177 httpsgithubcomipythonipythonpull11177 backport   you are receiving this because you authored the thread reply to this email directly view it on github httpsgithubcomipythonipythonpull11243issuecomment408670227 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez7xszk2eypi403xcjyijqzaf90glks5ulz3rgajpzm4vln3_  
2018-07-29T17:25:27Z			note pushed this and whats new in 5x to the 6x branch already  
2018-07-29T17:29:58Z			fixed   
2018-07-23T17:05:01Z			thanks  backported to 5x manually and merged into 6x 
2018-07-23T17:05:01Z			thanks  backported to 5x manually and merged into 6x 
2018-07-22T18:39:11Z			thanks ill backport that to the 6x branch and try to do a release soon apologies for the delay 
2018-07-22T18:39:11Z			thanks ill backport that to the 6x branch and try to do a release soon apologies for the delay 
2018-07-11T16:57:33Z			thanks  
2018-07-11T16:57:33Z			thanks  
2018-07-11T16:58:54Z			looks good thanks  
2018-07-11T16:58:54Z			looks good thanks  
2018-06-21T14:09:41Z			also please be careful your editor seem to have been set to trim all whitespaces which adds a lot of irrelevant changes tanks 
2018-07-11T16:58:24Z			thanks 
2018-06-21T14:09:41Z			also please be careful your editor seem to have been set to trim all whitespaces which adds a lot of irrelevant changes tanks 
2018-07-11T16:58:24Z			thanks 
2018-06-13T17:19:53Z			done by swapping base class  the resource warnings were not showing on 36 but showing on nightly 
2018-06-13T17:19:53Z			done by swapping base class  the resource warnings were not showing on 36 but showing on nightly 
2018-05-29T16:43:53Z			failing for now travis nightly may not have been updated yet  
2018-09-12T08:37:08Z			oh that would be great  do you want to send a pr   
2018-09-12T10:43:35Z			rebased and move docs to be built on 37 also test on 37dev just in case 
2018-05-29T16:43:53Z			failing for now travis nightly may not have been updated yet  
2018-09-12T08:37:08Z			oh that would be great  do you want to send a pr   
2018-09-12T10:43:35Z			rebased and move docs to be built on 37 also test on 37dev just in case 
2018-05-25T15:55:30Z			the problem with this is if we have any further downstream ast transformers looking at the first node then this wont work as the first node will be gone in multiline statements 
2018-07-28T22:32:14Z			closing as cpython removed the change to ast  
2018-05-25T15:55:30Z			the problem with this is if we have any further downstream ast transformers looking at the first node then this wont work as the first node will be gone in multiline statements 
2018-07-28T22:32:14Z			closing as cpython removed the change to ast  
2018-05-24T17:42:14Z			thanks for reviving that 1 i believe in 37 await at top level is valid should we support that only for 37 and get rid of all the ast munging and complexity of making the parsing work in 36 and below 2 im baffled by the test faillures iptest ipythoncoreteststest_application ipythoncoreteststest_async_helpers fails but each independently succeed 
2018-05-24T17:44:22Z			 im baffled by the test faillures iptest ipythoncoreteststest_application ipythoncoreteststest_async_helpers fails but each independently succeedno my bad just seem to be random test_async_helpers fails on its own 
2018-05-24T21:01:50Z			 i dont think this is true unfortunately maybe 38 if someone steps up to do it i suspect the main asyncio maintainers will be too busy to get to itwell ok maybe 38 but in nightly at least astparse now allows async top levelcompile does fail though  minrk obviously tornado is the natural place to start given how ipykernel works but have you thought at all about how to support alternative event loopsthat is also my concern but then i guess we have 2 questions do we allow to run triocurio code by locally blocking for the current cell because when running in ipykernel you obviously cant run using the trio or curio runner to run async_cells or can we  
2018-05-24T21:23:57Z			ive pushed a tiny fix to the loop_runner to ensure it is a callable and that if curiotrio or asyncio string were passed they were mapped to the correct runner and not to the module themselves after importswith this running ipython under trio does seem to work with the asyncio loop not running not sure what that does in a notebook though img width652 altscreen shot 20180524 at 14 21 53 srchttpsuserimagesgithubusercontentcom33556740514399d8fb4ba25f5d11e889b7e5b42aa86f7epng 
2018-05-24T22:11:13Z			ok one of the error left is in nesting ipython as the event loop is already runningdetailsruntimeerror                              traceback most recent call lastipythoninput30c5ef5f92d7e in module 1 ipythonembeddevipythonipythonterminalembedpy in embedkwargs    384         framef_codeco_filename framef_lineno kwargs    385     shellheaderheader stack_depth2 compile_flagscompile_flags 386           _call_location_idss  framef_codeco_filename framef_lineno    387     interactiveshellembedclear_instance    388     restore previous instancedevipythonipythonterminalembedpy in __call__self header local_ns module dummy stack_depth global_ns compile_flags kw    227          our call and get the original callers namespaces    228         selfmainlooplocal_ns module stack_depthstack_depth 229                       global_nsglobal_ns compile_flagscompile_flags    230    231         selfbanner2  selfold_banner2devipythonipythonterminalembedpy in mainloopself local_ns module stack_depth display_banner global_ns compile_flags    322    323         with selfbuiltin_trap selfdisplay_trap 324             selfinteract    325    326          now purge out the local namespace of ipythons hidden variablesdevipythonipythonterminalinteractiveshellpy in interactself display_banner    474             else    475                 if code 476                     selfrun_cellcode store_historytrue    477    478     def mainloopself display_bannerdisplay_banner_deprecateddevipythonipythoncoreinteractiveshellpy in run_cellself raw_cell store_history silent shell_futures   2794                 store_historystore_history   2795                 silentsilent 2796                 shell_futuresshell_futures   2797                2798         devipythonipythoncoreasync_helperspy in _asyncio_runnercoro     23          24     import asyncio 25     return asyncioget_event_looprun_until_completecoro     26     27anacondalibpython36asynciobase_eventspy in run_until_completeself future    452         futureadd_done_callback_run_until_complete_cb    453         try 454             selfrun_forever    455         except    456             if new_task and futuredone and not futurecancelledanacondalibpython36asynciobase_eventspy in run_foreverself    406         self_check_closed    407         if selfis_running 408             raise runtimeerrorthis event loop is already running    409         if events_get_running_loop is not none    410             raise runtimeerrorruntimeerror this event loop is already runningin 4 nameerror                                 traceback most recent call lastipythoninput4428746cf6514 in module 1 printtrue if embed1 is not ip0 else falsenameerror name embed1 is not defineddetailsthat im also not sure how to fix 
2018-05-24T23:20:43Z			so one possibility is to run the nested instances using different event loop or to drop the support for nested embed for now until all is async and we can run an async embed 
2018-05-25T16:45:39Z			im happy to drop the necessity to have nested ipythons but we should likely ask on the mailing list first for how many users of this feature we havei think the need for embed have two sides 1 running in an existing eventloop  2 blocking an event loop and inspecting current statei dont believe in 2 we need a lot of async integrations so im happy to clearreplace eventloopnjsmith how hard would it be to have a version of triorun that can be reentered  how negatively would you react to us wrapping triorun in the following context manager pythoncontextmanagerdef new_context    import trio_core_run as tcr    old_runner  getattrtcrglobal_run_context runner none    old_task  getattrtcrglobal_run_context task none    if old_runner        del tcrglobal_run_contextrunner    if old_task        del tcrglobal_run_contexttask    yield    if old_runner        tcrglobal_run_contextrunner  old_runner    if old_task        tcrglobal_run_contexttask  old_task 
2018-05-25T21:24:02Z			afaict this commithttpsgithubcomcarreauipythoncommitf98805633c9a15f856ba793a10275bf462e3b227 make multiple nested embedded ipythons works using trio and above context manager and relying on trios internal you can of course make ipython crash if you try to switch to asyncio loop in one of the nested embedded ones 
2018-05-29T23:59:19Z			cc mrocklin would that be of any use when interacting with dask interactively  see  ipythonipykernel323 as well when running that inside a notebook  
2018-08-14T01:50:16Z			there is a significant amount of difference with master now and rebase is tough in order to keep some history im going to close and  open a pr where all the work as been merged into a single commit and the merge commits from this removed 
2018-08-14T02:21:19Z			see 11265 
2018-05-24T17:42:14Z			thanks for reviving that 1 i believe in 37 await at top level is valid should we support that only for 37 and get rid of all the ast munging and complexity of making the parsing work in 36 and below 2 im baffled by the test faillures iptest ipythoncoreteststest_application ipythoncoreteststest_async_helpers fails but each independently succeed 
2018-05-24T17:44:22Z			 im baffled by the test faillures iptest ipythoncoreteststest_application ipythoncoreteststest_async_helpers fails but each independently succeedno my bad just seem to be random test_async_helpers fails on its own 
2018-05-24T21:01:50Z			 i dont think this is true unfortunately maybe 38 if someone steps up to do it i suspect the main asyncio maintainers will be too busy to get to itwell ok maybe 38 but in nightly at least astparse now allows async top levelcompile does fail though  minrk obviously tornado is the natural place to start given how ipykernel works but have you thought at all about how to support alternative event loopsthat is also my concern but then i guess we have 2 questions do we allow to run triocurio code by locally blocking for the current cell because when running in ipykernel you obviously cant run using the trio or curio runner to run async_cells or can we  
2018-05-24T21:23:57Z			ive pushed a tiny fix to the loop_runner to ensure it is a callable and that if curiotrio or asyncio string were passed they were mapped to the correct runner and not to the module themselves after importswith this running ipython under trio does seem to work with the asyncio loop not running not sure what that does in a notebook though img width652 altscreen shot 20180524 at 14 21 53 srchttpsuserimagesgithubusercontentcom33556740514399d8fb4ba25f5d11e889b7e5b42aa86f7epng 
2018-05-24T22:11:13Z			ok one of the error left is in nesting ipython as the event loop is already runningdetailsruntimeerror                              traceback most recent call lastipythoninput30c5ef5f92d7e in module 1 ipythonembeddevipythonipythonterminalembedpy in embedkwargs    384         framef_codeco_filename framef_lineno kwargs    385     shellheaderheader stack_depth2 compile_flagscompile_flags 386           _call_location_idss  framef_codeco_filename framef_lineno    387     interactiveshellembedclear_instance    388     restore previous instancedevipythonipythonterminalembedpy in __call__self header local_ns module dummy stack_depth global_ns compile_flags kw    227          our call and get the original callers namespaces    228         selfmainlooplocal_ns module stack_depthstack_depth 229                       global_nsglobal_ns compile_flagscompile_flags    230    231         selfbanner2  selfold_banner2devipythonipythonterminalembedpy in mainloopself local_ns module stack_depth display_banner global_ns compile_flags    322    323         with selfbuiltin_trap selfdisplay_trap 324             selfinteract    325    326          now purge out the local namespace of ipythons hidden variablesdevipythonipythonterminalinteractiveshellpy in interactself display_banner    474             else    475                 if code 476                     selfrun_cellcode store_historytrue    477    478     def mainloopself display_bannerdisplay_banner_deprecateddevipythonipythoncoreinteractiveshellpy in run_cellself raw_cell store_history silent shell_futures   2794                 store_historystore_history   2795                 silentsilent 2796                 shell_futuresshell_futures   2797                2798         devipythonipythoncoreasync_helperspy in _asyncio_runnercoro     23          24     import asyncio 25     return asyncioget_event_looprun_until_completecoro     26     27anacondalibpython36asynciobase_eventspy in run_until_completeself future    452         futureadd_done_callback_run_until_complete_cb    453         try 454             selfrun_forever    455         except    456             if new_task and futuredone and not futurecancelledanacondalibpython36asynciobase_eventspy in run_foreverself    406         self_check_closed    407         if selfis_running 408             raise runtimeerrorthis event loop is already running    409         if events_get_running_loop is not none    410             raise runtimeerrorruntimeerror this event loop is already runningin 4 nameerror                                 traceback most recent call lastipythoninput4428746cf6514 in module 1 printtrue if embed1 is not ip0 else falsenameerror name embed1 is not defineddetailsthat im also not sure how to fix 
2018-05-24T23:20:43Z			so one possibility is to run the nested instances using different event loop or to drop the support for nested embed for now until all is async and we can run an async embed 
2018-05-25T16:45:39Z			im happy to drop the necessity to have nested ipythons but we should likely ask on the mailing list first for how many users of this feature we havei think the need for embed have two sides 1 running in an existing eventloop  2 blocking an event loop and inspecting current statei dont believe in 2 we need a lot of async integrations so im happy to clearreplace eventloopnjsmith how hard would it be to have a version of triorun that can be reentered  how negatively would you react to us wrapping triorun in the following context manager pythoncontextmanagerdef new_context    import trio_core_run as tcr    old_runner  getattrtcrglobal_run_context runner none    old_task  getattrtcrglobal_run_context task none    if old_runner        del tcrglobal_run_contextrunner    if old_task        del tcrglobal_run_contexttask    yield    if old_runner        tcrglobal_run_contextrunner  old_runner    if old_task        tcrglobal_run_contexttask  old_task 
2018-05-25T21:24:02Z			afaict this commithttpsgithubcomcarreauipythoncommitf98805633c9a15f856ba793a10275bf462e3b227 make multiple nested embedded ipythons works using trio and above context manager and relying on trios internal you can of course make ipython crash if you try to switch to asyncio loop in one of the nested embedded ones 
2018-05-29T23:59:19Z			cc mrocklin would that be of any use when interacting with dask interactively  see  ipythonipykernel323 as well when running that inside a notebook  
2018-08-14T01:50:16Z			there is a significant amount of difference with master now and rebase is tough in order to keep some history im going to close and  open a pr where all the work as been merged into a single commit and the merge commits from this removed 
2018-08-14T02:21:19Z			see 11265 
2018-05-17T20:22:20Z			 this all looks fine though i dont know why wed want to plan a refactor afaik pycolorize has been deprecated for some time in favour of pygmentsright now its in use in ultratb and i want to refactor ultratb to separate generating the tb information from formattingill progressively change ultratb to yield list of tokens that will still be formatted by pycolorize i can make pycolorize aware of out own tokens typeand once ultratb is cleaner i can move away from pycolorize and use pygments pretty trivially also then i can format tracebacks with something else than ansi like html or a proper mimebundle rendered by the frontenddoes that make some sens  
2018-05-17T20:22:20Z			 this all looks fine though i dont know why wed want to plan a refactor afaik pycolorize has been deprecated for some time in favour of pygmentsright now its in use in ultratb and i want to refactor ultratb to separate generating the tb information from formattingill progressively change ultratb to yield list of tokens that will still be formatted by pycolorize i can make pycolorize aware of out own tokens typeand once ultratb is cleaner i can move away from pycolorize and use pygments pretty trivially also then i can format tracebacks with something else than ansi like html or a proper mimebundle rendered by the frontenddoes that make some sens  
2018-05-16T20:37:24Z			1do you think it is worth backporting to 5x python 27 or can this be a carrot for 3x users  
2018-05-16T20:41:45Z			oh sorry i missread thanks  
2018-07-29T01:08:25Z			jdemeyer released on pypi ill update the conda recipe later  
2018-05-16T20:37:24Z			1do you think it is worth backporting to 5x python 27 or can this be a carrot for 3x users  
2018-05-16T20:41:45Z			oh sorry i missread thanks  
2018-07-29T01:08:25Z			jdemeyer released on pypi ill update the conda recipe later  
2018-05-12T23:06:59Z			also start testing on 37 
2018-05-16T20:47:41Z			actually i think i should port that to 6x as 70 will not be release for python 37meeseeksdev backport to 6x 
2018-05-12T23:06:59Z			also start testing on 37 
2018-05-16T20:47:41Z			actually i think i should port that to 6x as 70 will not be release for python 37meeseeksdev backport to 6x 
2018-05-16T20:45:13Z			meeseeksdev backport to 6x 
2018-05-16T20:45:13Z			meeseeksdev backport to 6x 
2018-05-16T22:27:42Z			willingc on the education side do you have thoughts   
2018-05-17T01:29:54Z			no in this pullrequest no change beyond thatfor me the  mean you call something and you usually cant call a moduleim working on refactoring the tracebacks code  without visual change  but once im ready to do visual changes ill do an extensive proposal 
2018-05-16T22:27:42Z			willingc on the education side do you have thoughts   
2018-05-17T01:29:54Z			no in this pullrequest no change beyond thatfor me the  mean you call something and you usually cant call a moduleim working on refactoring the tracebacks code  without visual change  but once im ready to do visual changes ill do an extensive proposal 
2018-05-10T18:30:30Z			hum i dont know im going to do it by hand and add more debug statements 
2018-05-10T18:30:30Z			hum i dont know im going to do it by hand and add more debug statements 
2018-05-10T18:12:20Z			 i think meeseeks backport functionality needs a bit of debuggingindeed let me retry  
2018-05-10T18:12:20Z			 i think meeseeks backport functionality needs a bit of debuggingindeed let me retry  
2018-05-10T18:12:51Z			meeseeksdev backport on 6x 
2018-05-10T18:19:32Z			meeseeksdev backport on 6x 
2018-05-10T18:20:21Z			stupid memeeseeksdev backport to 6x 
2018-05-10T18:12:51Z			meeseeksdev backport on 6x 
2018-05-10T18:19:32Z			meeseeksdev backport on 6x 
2018-05-10T18:20:21Z			stupid memeeseeksdev backport to 6x 
2018-05-01T19:56:11Z			meeseeksdev backport to 6x  
2018-05-01T19:56:11Z			meeseeksdev backport to 6x  
2018-04-17T23:54:19Z			or is that just on 5x  that is to say no forward port to master  
2018-04-19T01:56:36Z			 master variant of the same pr 11101 i also added the same bug fix against master in the linked prah sorry i missed that was probably tired you can skip making pr on old branches if applying the patch is trivial we have a bot that take care of it  
2018-05-02T17:34:22Z			 this will target a 56x milestone rightsorry habbit of tagging for  major1 changed to 57 which should backport to 5x then we can see for a 56x or 57 
2018-04-17T23:54:19Z			or is that just on 5x  that is to say no forward port to master  
2018-04-19T01:56:36Z			 master variant of the same pr 11101 i also added the same bug fix against master in the linked prah sorry i missed that was probably tired you can skip making pr on old branches if applying the patch is trivial we have a bot that take care of it  
2018-05-02T17:34:22Z			 this will target a 56x milestone rightsorry habbit of tagging for  major1 changed to 57 which should backport to 5x then we can see for a 56x or 57 
2018-04-19T02:03:22Z			 failure seems unrelated to pr fail ipythoncoreteststest_completertest_omit__namesthat might be due to a recent release of jedi  ill investigate 
2018-05-02T18:36:35Z			yes weve commented the testsim flabbergasted our bot did not react to the pr merge i guess we also need to backport that on 6x and do a 5x and 6x release 
2018-05-02T18:37:30Z			ah no my bad i merged the backport and not on master thats why 
2018-04-19T02:03:22Z			 failure seems unrelated to pr fail ipythoncoreteststest_completertest_omit__namesthat might be due to a recent release of jedi  ill investigate 
2018-05-02T18:36:35Z			yes weve commented the testsim flabbergasted our bot did not react to the pr merge i guess we also need to backport that on 6x and do a 5x and 6x release 
2018-05-02T18:37:30Z			ah no my bad i merged the backport and not on master thats why 
2018-04-01T18:19:32Z			1 as a workaround but we should have a proper fix at some point 
2018-04-01T18:19:32Z			1 as a workaround but we should have a proper fix at some point 
2018-03-13T16:11:01Z			i like simplifications in general  ill trust you on this id like to think about how that wouldcould be integrated with a nonblocking sansio ipython 
2018-05-17T20:18:01Z			ive read part of this ill let it settle a bit in my head and come back to it how easy would it be to compare currentnew transformations discarding the old one but comparing and raising a warning if there is a difference  
2018-05-18T00:23:57Z			1 i left inline commenti wold be happy if we could have both sidebyside in master raising a warning error if the result of the transformation is different but that seem easier to use than previous machinery 
2018-05-27T19:11:44Z			 deprecation warnings id like to make at least one release with the new machinery in place before the old ones start warningarent pendingdeprecationwwarning for that  were going to deprecate that but not yet please have a look at new mechanism and give us feedback are you panning thus to readd some of what was removed  fair enough for the rest at least we know these questions were discussed we should try to send a request for feedback on the mailing list   
2018-06-21T20:13:21Z			ill reread all of that later flying tomorrow if i have wifi in the plane ill do that then 
2018-06-22T05:50:41Z			i push a docstring and a couple of deprecation warnings feel free to remove if you like 
2018-06-24T20:48:51Z			cc dakoop colinjbrown from httpsgithubcomdataflownbdfkernel  i believe you are using input transformer just to make sure this will not affect you too much  
2018-08-28T01:19:55Z			takluyver id like to try to cut a 70 current september we had no complaint so im assuming everyone is 1 so i suggest fixing conflict relatively trivial merging and moving onwith that we can get a beta for about a week then rc and final by hopefully mid to late september how does that sound   
2018-08-29T18:17:51Z			ive fixed the conflicts  
2018-09-01T16:11:06Z			 ive fixed the conflictsive fixed new conflict due to the reactivation of autoindent 
2018-09-01T21:32:42Z			 i would be happy to see this landso be it  though im not looking forward to finding out what the change has brokenill help you fix stuff worse case we revert and reiteratethere is only a couple of things left for 70 and one test regression id like to backport httpsgithubcomipythonipythonpull11277 for 59 and we can do a beta 
2018-09-01T21:33:34Z			  pinot grigio 
2018-09-01T21:35:02Z			im sure even mr meeseeks is excitedmeeseeksdevbot say congratulation thomas good work meeseeksdevbot party 
2018-03-13T16:11:01Z			i like simplifications in general  ill trust you on this id like to think about how that wouldcould be integrated with a nonblocking sansio ipython 
2018-05-17T20:18:01Z			ive read part of this ill let it settle a bit in my head and come back to it how easy would it be to compare currentnew transformations discarding the old one but comparing and raising a warning if there is a difference  
2018-05-18T00:23:57Z			1 i left inline commenti wold be happy if we could have both sidebyside in master raising a warning error if the result of the transformation is different but that seem easier to use than previous machinery 
2018-05-27T19:11:44Z			 deprecation warnings id like to make at least one release with the new machinery in place before the old ones start warningarent pendingdeprecationwwarning for that  were going to deprecate that but not yet please have a look at new mechanism and give us feedback are you panning thus to readd some of what was removed  fair enough for the rest at least we know these questions were discussed we should try to send a request for feedback on the mailing list   
2018-06-21T20:13:21Z			ill reread all of that later flying tomorrow if i have wifi in the plane ill do that then 
2018-06-22T05:50:41Z			i push a docstring and a couple of deprecation warnings feel free to remove if you like 
2018-06-24T20:48:51Z			cc dakoop colinjbrown from httpsgithubcomdataflownbdfkernel  i believe you are using input transformer just to make sure this will not affect you too much  
2018-08-28T01:19:55Z			takluyver id like to try to cut a 70 current september we had no complaint so im assuming everyone is 1 so i suggest fixing conflict relatively trivial merging and moving onwith that we can get a beta for about a week then rc and final by hopefully mid to late september how does that sound   
2018-08-29T18:17:51Z			ive fixed the conflicts  
2018-09-01T16:11:06Z			 ive fixed the conflictsive fixed new conflict due to the reactivation of autoindent 
2018-09-01T21:32:42Z			 i would be happy to see this landso be it  though im not looking forward to finding out what the change has brokenill help you fix stuff worse case we revert and reiteratethere is only a couple of things left for 70 and one test regression id like to backport httpsgithubcomipythonipythonpull11277 for 59 and we can do a beta 
2018-09-01T21:33:34Z			  pinot grigio 
2018-09-01T21:35:02Z			im sure even mr meeseeks is excitedmeeseeksdevbot say congratulation thomas good work meeseeksdevbot party 
2018-09-02T16:42:10Z			no but the bot can read inside html comments that arent shown in the uion sun sep 2 2018 0027 thomas kluyver notificationsgithubcom wrote p does saying the bots name and the word excited in the same comment trigger that  you are receiving this because you modified the openclose state reply to this email directly view it on github httpsgithubcomipythonipythonpull11041issuecomment417910867 or mute the thread httpsgithubcomnotificationsunsubscribeauthaauez322zihniwjpysghfgi1ihkc5yfoks5uw4hjgajpzm4slpr3  
2018-04-01T18:57:35Z			 setting the stacklevel makes senseit may not as import machinery has an undefined stack number  across python versionsstill updated to remove deprecationwarning and added since when it was deprecated 
2018-04-01T18:57:35Z			 setting the stacklevel makes senseit may not as import machinery has an undefined stack number  across python versionsstill updated to remove deprecationwarning and added since when it was deprecated 
2018-09-09T19:20:34Z			ive rebased tests are now passing 
2018-09-09T19:22:54Z			i also havent been involved before so it would take time to be uptospeed iirc about warnings we do clear the warning registry explicitly so warning reappearing and custom logic being needed make sens to me 
2018-09-10T13:43:45Z			ok i reviewed the discussion and this is just adding warnings and deactivating qt there is the small disagreement about warning showing everytime but im favor of moving forward with at least an explanation for userswe can still update the behavior later merging  any chance this will get backported to the 5x branchim marking as backport just to see if this will apply cleanly if not someone will have to send a pr against 5x 
2018-09-09T19:20:34Z			ive rebased tests are now passing 
2018-09-09T19:22:54Z			i also havent been involved before so it would take time to be uptospeed iirc about warnings we do clear the warning registry explicitly so warning reappearing and custom logic being needed make sens to me 
2018-09-10T13:43:45Z			ok i reviewed the discussion and this is just adding warnings and deactivating qt there is the small disagreement about warning showing everytime but im favor of moving forward with at least an explanation for userswe can still update the behavior later merging  any chance this will get backported to the 5x branchim marking as backport just to see if this will apply cleanly if not someone will have to send a pr against 5x 
2018-01-03T17:15:29Z			seem reasonable to me the test failures looks like jedi is not working strange   
2018-01-04T10:03:42Z			do you want to have that on the 5x branch  or 6x only  
2018-01-04T12:02:54Z			 5x doesnt use jedi right so this should be for 6xah you are right i need to wake up  
2018-01-03T17:15:29Z			seem reasonable to me the test failures looks like jedi is not working strange   
2018-01-04T10:03:42Z			do you want to have that on the 5x branch  or 6x only  
2018-01-04T12:02:54Z			 5x doesnt use jedi right so this should be for 6xah you are right i need to wake up  
